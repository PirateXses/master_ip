-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.4
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity master_ip_uart_to_byte is
port (
    uart_to_coordinates_count_V_i : IN STD_LOGIC_VECTOR (15 downto 0);
    uart_to_coordinates_count_V_o : OUT STD_LOGIC_VECTOR (15 downto 0);
    uart_to_coordinates_count_V_o_ap_vld : OUT STD_LOGIC;
    uart_to_coordinates_previous_input_V_i : IN STD_LOGIC_VECTOR (0 downto 0);
    uart_to_coordinates_previous_input_V_o : OUT STD_LOGIC_VECTOR (0 downto 0);
    uart_to_coordinates_previous_input_V_o_ap_vld : OUT STD_LOGIC;
    uart_to_coordinates_current_input_V_read : IN STD_LOGIC_VECTOR (0 downto 0);
    uart_to_coordinates_uart_state_V_i : IN STD_LOGIC_VECTOR (3 downto 0);
    uart_to_coordinates_uart_state_V_o : OUT STD_LOGIC_VECTOR (3 downto 0);
    uart_to_coordinates_uart_state_V_o_ap_vld : OUT STD_LOGIC;
    uart_to_coordinates_next_out_byte_V_i : IN STD_LOGIC_VECTOR (7 downto 0);
    uart_to_coordinates_next_out_byte_V_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    uart_to_coordinates_next_out_byte_V_o_ap_vld : OUT STD_LOGIC;
    uart_to_coordinates_current_out_byte_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of master_ip_uart_to_byte is 
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_true : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv16_546 : STD_LOGIC_VECTOR (15 downto 0) := "0000010101000110";
    constant ap_const_lv16_4E2 : STD_LOGIC_VECTOR (15 downto 0) := "0000010011100010";
    constant ap_const_lv16_FAED : STD_LOGIC_VECTOR (15 downto 0) := "1111101011101101";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv16_37DC : STD_LOGIC_VECTOR (15 downto 0) := "0011011111011100";

    signal storemerge_phi_fu_155_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal uart_to_coordinates_current_in_1_read_fu_86_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_fu_699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal uart_to_coordinates_current_ou_1_phi_fu_167_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_fu_228_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_fu_574_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal uart_to_coordinates_current_ou_fu_641_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_s_phi_fu_177_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal uart_to_coordinates_uart_state_2_fu_622_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal uart_to_coordinates_count_V_wr_fu_480_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal uart_to_coordinates_count_V_wr_1_fu_666_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_215_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_196_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_208_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_202_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal uart_to_coordinates_previous_i_1_fu_497_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal uart_to_coordinates_previous_i_2_fu_675_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal uart_to_coordinates_uart_state_1_fu_522_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal uart_to_coordinates_uart_state_4_fu_684_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal uart_to_coordinates_next_out_b_1_fu_555_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_184_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_190_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_fu_610_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_592_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_240_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_246_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_258_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_276_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_270_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_288_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lhs_V_1_i_cast_fu_318_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_4_fu_322_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_56_i_cast_fu_340_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_57_i_fu_344_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_56_i_fu_336_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_60_i_fu_356_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_63_i_cast_fu_370_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_63_i_fu_366_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_58_i_fu_350_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_61_i_fu_360_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_fu_328_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_386_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_26_fu_390_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_65_i_fu_374_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_68_i_fu_380_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_408_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_27_fu_412_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i1_fu_312_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_i_fu_424_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_i_fu_430_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_v_i_cast_cast_fu_436_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp3_i_fu_450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_i_fu_468_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_i_fu_456_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_474_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_i_fu_444_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp13_i_fu_489_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_70_i_fu_402_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal newSel_fu_506_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal newSel1_fu_514_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_fu_394_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_1_fu_416_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel3_fu_531_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel4_fu_539_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel5_fu_547_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_fu_562_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_568_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_586_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal uart_to_coordinates_current_in_fu_580_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp2_fu_604_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_633_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel6_fu_650_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal newSel7_fu_658_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp7_fu_598_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal uart_to_coordinates_uart_state_3_fu_629_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_bdd_480 : BOOLEAN;


begin



    ap_return_0 <= p_s_phi_fu_177_p4;
    ap_return_1 <= uart_to_coordinates_current_ou_1_phi_fu_167_p4;

    -- ap_sig_bdd_480 assign process. --
    ap_sig_bdd_480_assign_proc : process(uart_to_coordinates_current_in_1_read_fu_86_p2, or_cond4_fu_699_p2)
    begin
                ap_sig_bdd_480 <= ((ap_const_lv1_0 = uart_to_coordinates_current_in_1_read_fu_86_p2) and (ap_const_lv1_0 = or_cond4_fu_699_p2));
    end process;

    grp_fu_184_p2 <= "1" when (unsigned(uart_to_coordinates_count_V_i) < unsigned(ap_const_lv16_546)) else "0";
    grp_fu_190_p2 <= "1" when (unsigned(uart_to_coordinates_count_V_i) > unsigned(ap_const_lv16_4E2)) else "0";
    grp_fu_196_p2 <= "1" when (unsigned(uart_to_coordinates_count_V_i) > unsigned(ap_const_lv16_546)) else "0";
    grp_fu_202_p2 <= (grp_fu_184_p2 and grp_fu_190_p2);
    grp_fu_208_p2 <= std_logic_vector(unsigned(uart_to_coordinates_count_V_i) + unsigned(ap_const_lv16_FAED));
    grp_fu_215_p2 <= std_logic_vector(unsigned(uart_to_coordinates_count_V_i) + unsigned(ap_const_lv16_1));
    lhs_V_1_i_cast_fu_318_p1 <= std_logic_vector(resize(unsigned(uart_to_coordinates_uart_state_V_i),5));
    newSel1_fu_514_p3 <= 
        tmp_70_i_fu_402_p2 when (sel_tmp1_i_fu_430_p2(0) = '1') else 
        uart_to_coordinates_uart_state_V_i;
    newSel3_fu_531_p3 <= 
        r_V_fu_394_p3 when (sel_tmp6_i_fu_468_p2(0) = '1') else 
        ap_const_lv8_0;
    newSel4_fu_539_p3 <= 
        r_V_1_fu_416_p3 when (sel_tmp1_i_fu_430_p2(0) = '1') else 
        ap_const_lv8_0;
    newSel5_fu_547_p3 <= 
        newSel3_fu_531_p3 when (tmp_13_fu_474_p2(0) = '1') else 
        newSel4_fu_539_p3;
    newSel6_fu_650_p3 <= 
        ap_const_lv16_1 when (sel_tmp9_fu_610_p2(0) = '1') else 
        grp_fu_208_p2;
    newSel7_fu_658_p3 <= 
        grp_fu_215_p2 when (sel_tmp4_fu_592_p2(0) = '1') else 
        ap_const_lv16_1;
    newSel_fu_506_p3 <= 
        tmp_70_i_fu_402_p2 when (sel_tmp6_i_fu_468_p2(0) = '1') else 
        ap_const_lv4_0;
    or_cond3_fu_574_p2 <= (tmp_9_fu_562_p2 and tmp_3_fu_568_p2);
    or_cond4_fu_699_p2 <= (uart_to_coordinates_previous_input_V_i and tmp_2_fu_693_p2);

    -- p_s_phi_fu_177_p4 assign process. --
    p_s_phi_fu_177_p4_assign_proc : process(tmp_fu_222_p2, tmp_1_fu_228_p2, tmp_24_fu_306_p2, or_cond3_fu_574_p2, uart_to_coordinates_uart_state_2_fu_622_p2)
    begin
        if (((tmp_fu_222_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_1_fu_228_p2) and not((ap_const_lv1_0 = tmp_24_fu_306_p2)) and not((ap_const_lv1_0 = or_cond3_fu_574_p2)))) then 
            p_s_phi_fu_177_p4 <= uart_to_coordinates_uart_state_2_fu_622_p2;
        elsif ((not((tmp_fu_222_p2 = ap_const_lv1_0)) or not((ap_const_lv1_0 = tmp_1_fu_228_p2)) or (ap_const_lv1_0 = tmp_24_fu_306_p2) or (ap_const_lv1_0 = or_cond3_fu_574_p2))) then 
            p_s_phi_fu_177_p4 <= ap_const_lv1_0;
        else 
            p_s_phi_fu_177_p4 <= "X";
        end if; 
    end process;

    r_V_1_fu_416_p3 <= 
        tmp_11_fu_408_p1 when (tmp_25_fu_328_p3(0) = '1') else 
        tmp_27_fu_412_p1;
    r_V_4_fu_322_p2 <= std_logic_vector(signed(ap_const_lv5_1E) + signed(lhs_V_1_i_cast_fu_318_p1));
    r_V_fu_394_p3 <= 
        tmp_5_fu_386_p1 when (tmp_25_fu_328_p3(0) = '1') else 
        tmp_26_fu_390_p1;
    sel_tmp13_i_fu_489_p3 <= 
        uart_to_coordinates_current_input_V_read when (sel_tmp4_i_fu_456_p2(0) = '1') else 
        uart_to_coordinates_previous_input_V_i;
    sel_tmp1_fu_633_p3 <= 
        uart_to_coordinates_next_out_byte_V_i when (sel_tmp_fu_616_p2(0) = '1') else 
        uart_to_coordinates_current_out_byte_V_read;
    sel_tmp1_i_fu_430_p2 <= (grp_fu_196_p2 and sel_tmp_i_fu_424_p2);
    sel_tmp2_i_fu_444_p2 <= std_logic_vector(unsigned(uart_to_coordinates_count_V_i) + unsigned(sel_tmp2_v_i_cast_cast_fu_436_p3));
    sel_tmp2_v_i_cast_cast_fu_436_p3 <= 
        ap_const_lv16_FAED when (sel_tmp1_i_fu_430_p2(0) = '1') else 
        ap_const_lv16_1;
    sel_tmp3_fu_586_p2 <= (grp_fu_196_p2 xor ap_const_lv1_1);
    sel_tmp3_i_fu_450_p2 <= (grp_fu_202_p2 xor ap_const_lv1_1);
    sel_tmp4_fu_592_p2 <= (uart_to_coordinates_current_input_V_read and sel_tmp3_fu_586_p2);
    sel_tmp4_i_fu_456_p2 <= (tmp_i1_fu_312_p2 and sel_tmp3_i_fu_450_p2);
    sel_tmp6_i_fu_468_p2 <= (tmp1_fu_462_p2 and grp_fu_184_p2);
    sel_tmp7_fu_598_p2 <= (grp_fu_196_p2 or uart_to_coordinates_current_in_fu_580_p2);
    sel_tmp9_fu_610_p2 <= (tmp2_fu_604_p2 and grp_fu_184_p2);
    sel_tmp_fu_616_p2 <= (grp_fu_196_p2 and uart_to_coordinates_current_input_V_read);
    sel_tmp_i_fu_424_p2 <= (tmp_i1_fu_312_p2 xor ap_const_lv1_1);

    -- storemerge_phi_fu_155_p4 assign process. --
    storemerge_phi_fu_155_p4_assign_proc : process(tmp_fu_222_p2, uart_to_coordinates_current_in_1_read_fu_86_p2, ap_sig_bdd_480)
    begin
        if (not((tmp_fu_222_p2 = ap_const_lv1_0))) then
            if (ap_sig_bdd_480) then 
                storemerge_phi_fu_155_p4 <= ap_const_lv1_0;
            elsif (not((ap_const_lv1_0 = uart_to_coordinates_current_in_1_read_fu_86_p2))) then 
                storemerge_phi_fu_155_p4 <= ap_const_lv1_1;
            else 
                storemerge_phi_fu_155_p4 <= "X";
            end if;
        else 
            storemerge_phi_fu_155_p4 <= "X";
        end if; 
    end process;

    tmp1_fu_462_p2 <= (grp_fu_190_p2 and tmp_i1_fu_312_p2);
    tmp2_fu_604_p2 <= (grp_fu_190_p2 and uart_to_coordinates_current_in_fu_580_p2);
    tmp_10_fu_234_p2 <= "1" when (uart_to_coordinates_uart_state_V_i = ap_const_lv4_F) else "0";
    tmp_11_fu_408_p1 <= std_logic_vector(resize(unsigned(tmp_65_i_fu_374_p2),8));
    tmp_12_fu_240_p2 <= "1" when (uart_to_coordinates_uart_state_V_i = ap_const_lv4_E) else "0";
    tmp_13_fu_474_p2 <= (sel_tmp6_i_fu_468_p2 or sel_tmp4_i_fu_456_p2);
    tmp_14_fu_246_p2 <= (tmp_12_fu_240_p2 or tmp_10_fu_234_p2);
    tmp_15_fu_252_p2 <= "1" when (uart_to_coordinates_uart_state_V_i = ap_const_lv4_D) else "0";
    tmp_16_fu_258_p2 <= (tmp_15_fu_252_p2 or tmp_14_fu_246_p2);
    tmp_17_fu_264_p2 <= "1" when (uart_to_coordinates_uart_state_V_i = ap_const_lv4_C) else "0";
    tmp_18_fu_270_p2 <= (tmp_17_fu_264_p2 or tmp_16_fu_258_p2);
    tmp_19_fu_276_p2 <= "1" when (uart_to_coordinates_uart_state_V_i = ap_const_lv4_B) else "0";
    tmp_1_fu_228_p2 <= "1" when (uart_to_coordinates_uart_state_V_i = ap_const_lv4_1) else "0";
    tmp_20_fu_282_p2 <= (tmp_19_fu_276_p2 or tmp_18_fu_270_p2);
    tmp_21_fu_288_p2 <= "1" when (uart_to_coordinates_uart_state_V_i = ap_const_lv4_A) else "0";
    tmp_22_fu_294_p2 <= (tmp_21_fu_288_p2 or tmp_20_fu_282_p2);
    tmp_23_fu_300_p2 <= "1" when (uart_to_coordinates_uart_state_V_i = ap_const_lv4_0) else "0";
    tmp_24_fu_306_p2 <= (tmp_23_fu_300_p2 or tmp_22_fu_294_p2);
    tmp_25_fu_328_p3 <= r_V_4_fu_322_p2(4 downto 4);
    tmp_26_fu_390_p1 <= tmp_61_i_fu_360_p2(8 - 1 downto 0);
    tmp_27_fu_412_p1 <= tmp_68_i_fu_380_p2(8 - 1 downto 0);
    tmp_2_fu_693_p2 <= "1" when (uart_to_coordinates_count_V_i = ap_const_lv16_37DC) else "0";
    tmp_3_fu_568_p2 <= "1" when (unsigned(uart_to_coordinates_uart_state_V_i) < unsigned(ap_const_lv4_D)) else "0";
    tmp_56_i_cast_fu_340_p1 <= std_logic_vector(resize(unsigned(uart_to_coordinates_previous_input_V_i),5));
    tmp_56_i_fu_336_p1 <= std_logic_vector(resize(unsigned(uart_to_coordinates_previous_input_V_i),32));
    tmp_57_i_fu_344_p2 <= std_logic_vector(unsigned(ap_const_lv5_2) - unsigned(lhs_V_1_i_cast_fu_318_p1));
    tmp_58_i_fu_350_p2 <= std_logic_vector(shift_right(unsigned(tmp_56_i_cast_fu_340_p1),to_integer(unsigned('0' & tmp_57_i_fu_344_p2(5-1 downto 0)))));
    tmp_5_fu_386_p1 <= std_logic_vector(resize(unsigned(tmp_58_i_fu_350_p2),8));
        tmp_60_i_fu_356_p1 <= std_logic_vector(resize(signed(r_V_4_fu_322_p2),32));

    tmp_61_i_fu_360_p2 <= std_logic_vector(shift_left(unsigned(tmp_56_i_fu_336_p1),to_integer(unsigned('0' & tmp_60_i_fu_356_p1(31-1 downto 0)))));
    tmp_63_i_cast_fu_370_p1 <= std_logic_vector(resize(unsigned(uart_to_coordinates_current_input_V_read),5));
    tmp_63_i_fu_366_p1 <= std_logic_vector(resize(unsigned(uart_to_coordinates_current_input_V_read),32));
    tmp_65_i_fu_374_p2 <= std_logic_vector(shift_right(unsigned(tmp_63_i_cast_fu_370_p1),to_integer(unsigned('0' & tmp_57_i_fu_344_p2(5-1 downto 0)))));
    tmp_68_i_fu_380_p2 <= std_logic_vector(shift_left(unsigned(tmp_63_i_fu_366_p1),to_integer(unsigned('0' & tmp_60_i_fu_356_p1(31-1 downto 0)))));
    tmp_70_i_fu_402_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(uart_to_coordinates_uart_state_V_i));
    tmp_9_fu_562_p2 <= "1" when (unsigned(uart_to_coordinates_uart_state_V_i) > unsigned(ap_const_lv4_9)) else "0";
    tmp_fu_222_p2 <= "1" when (uart_to_coordinates_uart_state_V_i = ap_const_lv4_0) else "0";
    tmp_i1_fu_312_p2 <= (uart_to_coordinates_previous_input_V_i xor uart_to_coordinates_current_input_V_read);

    -- uart_to_coordinates_count_V_o assign process. --
    uart_to_coordinates_count_V_o_assign_proc : process(uart_to_coordinates_count_V_i, tmp_fu_222_p2, uart_to_coordinates_current_in_1_read_fu_86_p2, or_cond4_fu_699_p2, tmp_1_fu_228_p2, tmp_24_fu_306_p2, or_cond3_fu_574_p2, uart_to_coordinates_count_V_wr_fu_480_p3, uart_to_coordinates_count_V_wr_1_fu_666_p3, grp_fu_215_p2, grp_fu_196_p2, grp_fu_208_p2, grp_fu_202_p2, tmp_2_fu_693_p2)
    begin
        if ((not((tmp_fu_222_p2 = ap_const_lv1_0)) and (ap_const_lv1_0 = uart_to_coordinates_current_in_1_read_fu_86_p2) and (ap_const_lv1_0 = or_cond4_fu_699_p2))) then 
            uart_to_coordinates_count_V_o <= ap_const_lv16_0;
        elsif ((((tmp_fu_222_p2 = ap_const_lv1_0) and not((ap_const_lv1_0 = uart_to_coordinates_current_in_1_read_fu_86_p2)) and not((ap_const_lv1_0 = tmp_1_fu_228_p2)) and (ap_const_lv1_0 = grp_fu_202_p2)) or ((tmp_fu_222_p2 = ap_const_lv1_0) and not((ap_const_lv1_0 = uart_to_coordinates_current_in_1_read_fu_86_p2)) and not((ap_const_lv1_0 = tmp_1_fu_228_p2)) and not((ap_const_lv1_0 = grp_fu_202_p2))) or (not((tmp_fu_222_p2 = ap_const_lv1_0)) and (ap_const_lv1_0 = uart_to_coordinates_current_in_1_read_fu_86_p2) and not((ap_const_lv1_0 = or_cond4_fu_699_p2))))) then 
            uart_to_coordinates_count_V_o <= ap_const_lv16_1;
        elsif (((tmp_fu_222_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = uart_to_coordinates_current_in_1_read_fu_86_p2) and not((ap_const_lv1_0 = tmp_1_fu_228_p2)) and not((ap_const_lv1_0 = grp_fu_196_p2)))) then 
            uart_to_coordinates_count_V_o <= grp_fu_208_p2;
        elsif ((((tmp_fu_222_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = uart_to_coordinates_current_in_1_read_fu_86_p2) and not((ap_const_lv1_0 = tmp_1_fu_228_p2)) and (ap_const_lv1_0 = grp_fu_196_p2)) or (not((tmp_fu_222_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = uart_to_coordinates_current_in_1_read_fu_86_p2)) and (ap_const_lv1_0 = tmp_2_fu_693_p2)))) then 
            uart_to_coordinates_count_V_o <= grp_fu_215_p2;
        elsif (((tmp_fu_222_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_1_fu_228_p2) and not((ap_const_lv1_0 = tmp_24_fu_306_p2)) and not((ap_const_lv1_0 = or_cond3_fu_574_p2)))) then 
            uart_to_coordinates_count_V_o <= uart_to_coordinates_count_V_wr_1_fu_666_p3;
        elsif (((tmp_fu_222_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_1_fu_228_p2) and (ap_const_lv1_0 = tmp_24_fu_306_p2))) then 
            uart_to_coordinates_count_V_o <= uart_to_coordinates_count_V_wr_fu_480_p3;
        else 
            uart_to_coordinates_count_V_o <= uart_to_coordinates_count_V_i;
        end if; 
    end process;


    -- uart_to_coordinates_count_V_o_ap_vld assign process. --
    uart_to_coordinates_count_V_o_ap_vld_assign_proc : process(tmp_fu_222_p2, uart_to_coordinates_current_in_1_read_fu_86_p2, or_cond4_fu_699_p2, tmp_1_fu_228_p2, tmp_24_fu_306_p2, or_cond3_fu_574_p2, grp_fu_196_p2, grp_fu_202_p2, tmp_2_fu_693_p2)
    begin
        if (((not((tmp_fu_222_p2 = ap_const_lv1_0)) and (ap_const_lv1_0 = uart_to_coordinates_current_in_1_read_fu_86_p2) and (ap_const_lv1_0 = or_cond4_fu_699_p2)) or ((tmp_fu_222_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_1_fu_228_p2) and not((ap_const_lv1_0 = tmp_24_fu_306_p2)) and not((ap_const_lv1_0 = or_cond3_fu_574_p2))) or ((tmp_fu_222_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_1_fu_228_p2) and (ap_const_lv1_0 = tmp_24_fu_306_p2)) or ((tmp_fu_222_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = uart_to_coordinates_current_in_1_read_fu_86_p2) and not((ap_const_lv1_0 = tmp_1_fu_228_p2)) and (ap_const_lv1_0 = grp_fu_196_p2)) or ((tmp_fu_222_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = uart_to_coordinates_current_in_1_read_fu_86_p2) and not((ap_const_lv1_0 = tmp_1_fu_228_p2)) and not((ap_const_lv1_0 = grp_fu_196_p2))) or ((tmp_fu_222_p2 = ap_const_lv1_0) and not((ap_const_lv1_0 = uart_to_coordinates_current_in_1_read_fu_86_p2)) and not((ap_const_lv1_0 = tmp_1_fu_228_p2)) and (ap_const_lv1_0 = grp_fu_202_p2)) or ((tmp_fu_222_p2 = ap_const_lv1_0) and not((ap_const_lv1_0 = uart_to_coordinates_current_in_1_read_fu_86_p2)) and not((ap_const_lv1_0 = tmp_1_fu_228_p2)) and not((ap_const_lv1_0 = grp_fu_202_p2))) or (not((tmp_fu_222_p2 = ap_const_lv1_0)) and (ap_const_lv1_0 = uart_to_coordinates_current_in_1_read_fu_86_p2) and not((ap_const_lv1_0 = or_cond4_fu_699_p2))) or (not((tmp_fu_222_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = uart_to_coordinates_current_in_1_read_fu_86_p2)) and (ap_const_lv1_0 = tmp_2_fu_693_p2)))) then 
            uart_to_coordinates_count_V_o_ap_vld <= ap_const_logic_1;
        else 
            uart_to_coordinates_count_V_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    uart_to_coordinates_count_V_wr_1_fu_666_p3 <= 
        newSel6_fu_650_p3 when (uart_to_coordinates_uart_state_2_fu_622_p2(0) = '1') else 
        newSel7_fu_658_p3;
    uart_to_coordinates_count_V_wr_fu_480_p3 <= 
        ap_const_lv16_1 when (tmp_13_fu_474_p2(0) = '1') else 
        sel_tmp2_i_fu_444_p2;
    uart_to_coordinates_current_in_1_read_fu_86_p2 <= uart_to_coordinates_current_input_V_read;
    uart_to_coordinates_current_in_fu_580_p2 <= (uart_to_coordinates_current_input_V_read xor ap_const_lv1_1);

    -- uart_to_coordinates_current_ou_1_phi_fu_167_p4 assign process. --
    uart_to_coordinates_current_ou_1_phi_fu_167_p4_assign_proc : process(uart_to_coordinates_current_out_byte_V_read, tmp_fu_222_p2, tmp_1_fu_228_p2, tmp_24_fu_306_p2, or_cond3_fu_574_p2, uart_to_coordinates_current_ou_fu_641_p3)
    begin
        if (((tmp_fu_222_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_1_fu_228_p2) and not((ap_const_lv1_0 = tmp_24_fu_306_p2)) and not((ap_const_lv1_0 = or_cond3_fu_574_p2)))) then 
            uart_to_coordinates_current_ou_1_phi_fu_167_p4 <= uart_to_coordinates_current_ou_fu_641_p3;
        elsif ((not((tmp_fu_222_p2 = ap_const_lv1_0)) or not((ap_const_lv1_0 = tmp_1_fu_228_p2)) or (ap_const_lv1_0 = tmp_24_fu_306_p2) or (ap_const_lv1_0 = or_cond3_fu_574_p2))) then 
            uart_to_coordinates_current_ou_1_phi_fu_167_p4 <= uart_to_coordinates_current_out_byte_V_read;
        else 
            uart_to_coordinates_current_ou_1_phi_fu_167_p4 <= "XXXXXXXX";
        end if; 
    end process;

    uart_to_coordinates_current_ou_fu_641_p3 <= 
        uart_to_coordinates_next_out_byte_V_i when (sel_tmp9_fu_610_p2(0) = '1') else 
        sel_tmp1_fu_633_p3;
    uart_to_coordinates_next_out_b_1_fu_555_p2 <= (uart_to_coordinates_next_out_byte_V_i or newSel5_fu_547_p3);

    -- uart_to_coordinates_next_out_byte_V_o assign process. --
    uart_to_coordinates_next_out_byte_V_o_assign_proc : process(uart_to_coordinates_next_out_byte_V_i, tmp_fu_222_p2, uart_to_coordinates_current_in_1_read_fu_86_p2, tmp_1_fu_228_p2, tmp_24_fu_306_p2, grp_fu_196_p2, grp_fu_202_p2, uart_to_coordinates_next_out_b_1_fu_555_p2)
    begin
        if ((((tmp_fu_222_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = uart_to_coordinates_current_in_1_read_fu_86_p2) and not((ap_const_lv1_0 = tmp_1_fu_228_p2)) and not((ap_const_lv1_0 = grp_fu_196_p2))) or ((tmp_fu_222_p2 = ap_const_lv1_0) and not((ap_const_lv1_0 = uart_to_coordinates_current_in_1_read_fu_86_p2)) and not((ap_const_lv1_0 = tmp_1_fu_228_p2)) and not((ap_const_lv1_0 = grp_fu_202_p2))))) then 
            uart_to_coordinates_next_out_byte_V_o <= ap_const_lv8_0;
        elsif (((tmp_fu_222_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_1_fu_228_p2) and (ap_const_lv1_0 = tmp_24_fu_306_p2))) then 
            uart_to_coordinates_next_out_byte_V_o <= uart_to_coordinates_next_out_b_1_fu_555_p2;
        else 
            uart_to_coordinates_next_out_byte_V_o <= uart_to_coordinates_next_out_byte_V_i;
        end if; 
    end process;


    -- uart_to_coordinates_next_out_byte_V_o_ap_vld assign process. --
    uart_to_coordinates_next_out_byte_V_o_ap_vld_assign_proc : process(tmp_fu_222_p2, uart_to_coordinates_current_in_1_read_fu_86_p2, tmp_1_fu_228_p2, tmp_24_fu_306_p2, grp_fu_196_p2, grp_fu_202_p2)
    begin
        if ((((tmp_fu_222_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_1_fu_228_p2) and (ap_const_lv1_0 = tmp_24_fu_306_p2)) or ((tmp_fu_222_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = uart_to_coordinates_current_in_1_read_fu_86_p2) and not((ap_const_lv1_0 = tmp_1_fu_228_p2)) and not((ap_const_lv1_0 = grp_fu_196_p2))) or ((tmp_fu_222_p2 = ap_const_lv1_0) and not((ap_const_lv1_0 = uart_to_coordinates_current_in_1_read_fu_86_p2)) and not((ap_const_lv1_0 = tmp_1_fu_228_p2)) and not((ap_const_lv1_0 = grp_fu_202_p2))))) then 
            uart_to_coordinates_next_out_byte_V_o_ap_vld <= ap_const_logic_1;
        else 
            uart_to_coordinates_next_out_byte_V_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    uart_to_coordinates_previous_i_1_fu_497_p3 <= 
        uart_to_coordinates_current_input_V_read when (sel_tmp6_i_fu_468_p2(0) = '1') else 
        sel_tmp13_i_fu_489_p3;
    uart_to_coordinates_previous_i_2_fu_675_p3 <= 
        sel_tmp_fu_616_p2 when (sel_tmp7_fu_598_p2(0) = '1') else 
        uart_to_coordinates_previous_input_V_i;

    -- uart_to_coordinates_previous_input_V_o assign process. --
    uart_to_coordinates_previous_input_V_o_assign_proc : process(uart_to_coordinates_previous_input_V_i, storemerge_phi_fu_155_p4, tmp_fu_222_p2, uart_to_coordinates_current_in_1_read_fu_86_p2, or_cond4_fu_699_p2, tmp_1_fu_228_p2, tmp_24_fu_306_p2, or_cond3_fu_574_p2, grp_fu_196_p2, grp_fu_202_p2, uart_to_coordinates_previous_i_1_fu_497_p3, uart_to_coordinates_previous_i_2_fu_675_p3)
    begin
        if (((not((tmp_fu_222_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = uart_to_coordinates_current_in_1_read_fu_86_p2))) or (not((tmp_fu_222_p2 = ap_const_lv1_0)) and (ap_const_lv1_0 = or_cond4_fu_699_p2)))) then 
            uart_to_coordinates_previous_input_V_o <= storemerge_phi_fu_155_p4;
        elsif ((((tmp_fu_222_p2 = ap_const_lv1_0) and not((ap_const_lv1_0 = uart_to_coordinates_current_in_1_read_fu_86_p2)) and not((ap_const_lv1_0 = tmp_1_fu_228_p2)) and (ap_const_lv1_0 = grp_fu_202_p2)) or ((tmp_fu_222_p2 = ap_const_lv1_0) and not((ap_const_lv1_0 = uart_to_coordinates_current_in_1_read_fu_86_p2)) and not((ap_const_lv1_0 = tmp_1_fu_228_p2)) and not((ap_const_lv1_0 = grp_fu_202_p2))))) then 
            uart_to_coordinates_previous_input_V_o <= ap_const_lv1_1;
        elsif (((tmp_fu_222_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = uart_to_coordinates_current_in_1_read_fu_86_p2) and not((ap_const_lv1_0 = tmp_1_fu_228_p2)) and not((ap_const_lv1_0 = grp_fu_196_p2)))) then 
            uart_to_coordinates_previous_input_V_o <= ap_const_lv1_0;
        elsif (((tmp_fu_222_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_1_fu_228_p2) and not((ap_const_lv1_0 = tmp_24_fu_306_p2)) and not((ap_const_lv1_0 = or_cond3_fu_574_p2)))) then 
            uart_to_coordinates_previous_input_V_o <= uart_to_coordinates_previous_i_2_fu_675_p3;
        elsif (((tmp_fu_222_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_1_fu_228_p2) and (ap_const_lv1_0 = tmp_24_fu_306_p2))) then 
            uart_to_coordinates_previous_input_V_o <= uart_to_coordinates_previous_i_1_fu_497_p3;
        else 
            uart_to_coordinates_previous_input_V_o <= uart_to_coordinates_previous_input_V_i;
        end if; 
    end process;


    -- uart_to_coordinates_previous_input_V_o_ap_vld assign process. --
    uart_to_coordinates_previous_input_V_o_ap_vld_assign_proc : process(tmp_fu_222_p2, uart_to_coordinates_current_in_1_read_fu_86_p2, or_cond4_fu_699_p2, tmp_1_fu_228_p2, tmp_24_fu_306_p2, or_cond3_fu_574_p2, grp_fu_196_p2, grp_fu_202_p2)
    begin
        if (((not((tmp_fu_222_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = uart_to_coordinates_current_in_1_read_fu_86_p2))) or ((tmp_fu_222_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_1_fu_228_p2) and not((ap_const_lv1_0 = tmp_24_fu_306_p2)) and not((ap_const_lv1_0 = or_cond3_fu_574_p2))) or ((tmp_fu_222_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_1_fu_228_p2) and (ap_const_lv1_0 = tmp_24_fu_306_p2)) or ((tmp_fu_222_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = uart_to_coordinates_current_in_1_read_fu_86_p2) and not((ap_const_lv1_0 = tmp_1_fu_228_p2)) and not((ap_const_lv1_0 = grp_fu_196_p2))) or ((tmp_fu_222_p2 = ap_const_lv1_0) and not((ap_const_lv1_0 = uart_to_coordinates_current_in_1_read_fu_86_p2)) and not((ap_const_lv1_0 = tmp_1_fu_228_p2)) and (ap_const_lv1_0 = grp_fu_202_p2)) or ((tmp_fu_222_p2 = ap_const_lv1_0) and not((ap_const_lv1_0 = uart_to_coordinates_current_in_1_read_fu_86_p2)) and not((ap_const_lv1_0 = tmp_1_fu_228_p2)) and not((ap_const_lv1_0 = grp_fu_202_p2))) or (not((tmp_fu_222_p2 = ap_const_lv1_0)) and (ap_const_lv1_0 = or_cond4_fu_699_p2)))) then 
            uart_to_coordinates_previous_input_V_o_ap_vld <= ap_const_logic_1;
        else 
            uart_to_coordinates_previous_input_V_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    uart_to_coordinates_uart_state_1_fu_522_p3 <= 
        newSel_fu_506_p3 when (tmp_13_fu_474_p2(0) = '1') else 
        newSel1_fu_514_p3;
    uart_to_coordinates_uart_state_2_fu_622_p2 <= (sel_tmp9_fu_610_p2 or sel_tmp_fu_616_p2);
    uart_to_coordinates_uart_state_3_fu_629_p1 <= std_logic_vector(resize(unsigned(uart_to_coordinates_uart_state_2_fu_622_p2),4));
    uart_to_coordinates_uart_state_4_fu_684_p3 <= 
        uart_to_coordinates_uart_state_3_fu_629_p1 when (sel_tmp7_fu_598_p2(0) = '1') else 
        uart_to_coordinates_uart_state_V_i;

    -- uart_to_coordinates_uart_state_V_o assign process. --
    uart_to_coordinates_uart_state_V_o_assign_proc : process(uart_to_coordinates_uart_state_V_i, tmp_fu_222_p2, uart_to_coordinates_current_in_1_read_fu_86_p2, or_cond4_fu_699_p2, tmp_1_fu_228_p2, tmp_24_fu_306_p2, or_cond3_fu_574_p2, grp_fu_196_p2, grp_fu_202_p2, uart_to_coordinates_uart_state_1_fu_522_p3, uart_to_coordinates_uart_state_4_fu_684_p3)
    begin
        if ((not((tmp_fu_222_p2 = ap_const_lv1_0)) and (ap_const_lv1_0 = uart_to_coordinates_current_in_1_read_fu_86_p2) and not((ap_const_lv1_0 = or_cond4_fu_699_p2)))) then 
            uart_to_coordinates_uart_state_V_o <= ap_const_lv4_1;
        elsif (((tmp_fu_222_p2 = ap_const_lv1_0) and not((ap_const_lv1_0 = uart_to_coordinates_current_in_1_read_fu_86_p2)) and not((ap_const_lv1_0 = tmp_1_fu_228_p2)) and (ap_const_lv1_0 = grp_fu_202_p2))) then 
            uart_to_coordinates_uart_state_V_o <= ap_const_lv4_0;
        elsif ((((tmp_fu_222_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = uart_to_coordinates_current_in_1_read_fu_86_p2) and not((ap_const_lv1_0 = tmp_1_fu_228_p2)) and not((ap_const_lv1_0 = grp_fu_196_p2))) or ((tmp_fu_222_p2 = ap_const_lv1_0) and not((ap_const_lv1_0 = uart_to_coordinates_current_in_1_read_fu_86_p2)) and not((ap_const_lv1_0 = tmp_1_fu_228_p2)) and not((ap_const_lv1_0 = grp_fu_202_p2))))) then 
            uart_to_coordinates_uart_state_V_o <= ap_const_lv4_2;
        elsif (((tmp_fu_222_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_1_fu_228_p2) and not((ap_const_lv1_0 = tmp_24_fu_306_p2)) and not((ap_const_lv1_0 = or_cond3_fu_574_p2)))) then 
            uart_to_coordinates_uart_state_V_o <= uart_to_coordinates_uart_state_4_fu_684_p3;
        elsif (((tmp_fu_222_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_1_fu_228_p2) and (ap_const_lv1_0 = tmp_24_fu_306_p2))) then 
            uart_to_coordinates_uart_state_V_o <= uart_to_coordinates_uart_state_1_fu_522_p3;
        else 
            uart_to_coordinates_uart_state_V_o <= uart_to_coordinates_uart_state_V_i;
        end if; 
    end process;


    -- uart_to_coordinates_uart_state_V_o_ap_vld assign process. --
    uart_to_coordinates_uart_state_V_o_ap_vld_assign_proc : process(tmp_fu_222_p2, uart_to_coordinates_current_in_1_read_fu_86_p2, or_cond4_fu_699_p2, tmp_1_fu_228_p2, tmp_24_fu_306_p2, or_cond3_fu_574_p2, grp_fu_196_p2, grp_fu_202_p2)
    begin
        if ((((tmp_fu_222_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_1_fu_228_p2) and not((ap_const_lv1_0 = tmp_24_fu_306_p2)) and not((ap_const_lv1_0 = or_cond3_fu_574_p2))) or ((tmp_fu_222_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_1_fu_228_p2) and (ap_const_lv1_0 = tmp_24_fu_306_p2)) or ((tmp_fu_222_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = uart_to_coordinates_current_in_1_read_fu_86_p2) and not((ap_const_lv1_0 = tmp_1_fu_228_p2)) and not((ap_const_lv1_0 = grp_fu_196_p2))) or ((tmp_fu_222_p2 = ap_const_lv1_0) and not((ap_const_lv1_0 = uart_to_coordinates_current_in_1_read_fu_86_p2)) and not((ap_const_lv1_0 = tmp_1_fu_228_p2)) and (ap_const_lv1_0 = grp_fu_202_p2)) or ((tmp_fu_222_p2 = ap_const_lv1_0) and not((ap_const_lv1_0 = uart_to_coordinates_current_in_1_read_fu_86_p2)) and not((ap_const_lv1_0 = tmp_1_fu_228_p2)) and not((ap_const_lv1_0 = grp_fu_202_p2))) or (not((tmp_fu_222_p2 = ap_const_lv1_0)) and (ap_const_lv1_0 = uart_to_coordinates_current_in_1_read_fu_86_p2) and not((ap_const_lv1_0 = or_cond4_fu_699_p2))))) then 
            uart_to_coordinates_uart_state_V_o_ap_vld <= ap_const_logic_1;
        else 
            uart_to_coordinates_uart_state_V_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
