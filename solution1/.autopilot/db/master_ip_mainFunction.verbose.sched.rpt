

================================================================
== Vivado HLS Report for 'master_ip_mainFunction'
================================================================
* Date:           Wed May 11 13:21:22 2016

* Version:        2015.4 (Build 1412921 on Wed Nov 18 09:58:55 AM 2015)
* Project:        master_ip
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  20.00|     14.39|        2.50|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    1|    4|    1|    4|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 3
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / (tmp)
	3  / (!tmp)
2 --> 
	3  / true
3 --> 
* FSM state operations: 

 <State 1>: 13.11ns
ST_1: p_read_1 [1/1] 1.04ns
:0  %p_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read5)

ST_1: p_read_2 [1/1] 1.04ns
:1  %p_read_2 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read2)

ST_1: p_read_3 [1/1] 1.04ns
:2  %p_read_3 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read)

ST_1: input_V_read_1 [1/1] 1.04ns
:3  %input_V_read_1 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %input_V_read)

ST_1: uart_to_coordinates_ck_b_V_rea_1 [1/1] 1.04ns
:4  %uart_to_coordinates_ck_b_V_rea_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %uart_to_coordinates_ck_b_V_read)

ST_1: uart_to_coordinates_ck_a_V_rea_1 [1/1] 1.04ns
:5  %uart_to_coordinates_ck_a_V_rea_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %uart_to_coordinates_ck_a_V_read)

ST_1: uart_to_coordinates_gnss_state_1 [1/1] 1.04ns
:6  %uart_to_coordinates_gnss_state_1 = call i6 @_ssdm_op_Read.ap_auto.i6(i6 %uart_to_coordinates_gnss_state_V_read)

ST_1: uart_to_coordinates_current_ou_3 [1/1] 1.04ns
:7  %uart_to_coordinates_current_ou_3 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %uart_to_coordinates_current_out_byte_V_read)

ST_1: call_ret6 [1/1] 10.50ns
:8  %call_ret6 = call fastcc { i1, i8 } @master_ip_uart_to_byte(i16* %uart_to_coordinates_count_V, i1* %uart_to_coordinates_previous_input_V, i1 %input_V_read_1, i4* %uart_to_coordinates_uart_state_V, i8* %uart_to_coordinates_next_out_byte_V, i8 %uart_to_coordinates_current_ou_3)

ST_1: tmp [1/1] 0.00ns
:9  %tmp = extractvalue { i1, i8 } %call_ret6, 0

ST_1: uart_to_coordinates_current_ou [1/1] 0.00ns
:10  %uart_to_coordinates_current_ou = extractvalue { i1, i8 } %call_ret6, 1

ST_1: stg_15 [1/1] 1.57ns
:11  br i1 %tmp, label %_ifconv, label %._crit_edge


 <State 2>: 14.39ns
ST_2: tmp_i [1/1] 1.72ns
_ifconv:0  %tmp_i = add i8 %uart_to_coordinates_current_ou, %uart_to_coordinates_ck_a_V_rea_1

ST_2: tmp_85_i [1/1] 1.72ns
_ifconv:1  %tmp_85_i = add i8 %tmp_i, %uart_to_coordinates_ck_b_V_rea_1

ST_2: tmp_86_i [1/1] 1.94ns
_ifconv:2  %tmp_86_i = icmp ugt i6 %uart_to_coordinates_gnss_state_1, -7

ST_2: tmp_87_i [1/1] 1.94ns
_ifconv:3  %tmp_87_i = icmp ult i6 %uart_to_coordinates_gnss_state_1, -4

ST_2: or_cond4_i [1/1] 1.37ns
_ifconv:4  %or_cond4_i = and i1 %tmp_86_i, %tmp_87_i

ST_2: uart_to_coordinates_ck_a_V_rea [1/1] 1.37ns
_ifconv:5  %uart_to_coordinates_ck_a_V_rea = select i1 %or_cond4_i, i8 %uart_to_coordinates_ck_a_V_rea_1, i8 0

ST_2: uart_to_coordinates_ck_b_V_rea [1/1] 1.37ns
_ifconv:6  %uart_to_coordinates_ck_b_V_rea = select i1 %or_cond4_i, i8 %uart_to_coordinates_ck_b_V_rea_1, i8 0

ST_2: sel_tmp [1/1] 1.94ns
_ifconv:7  %sel_tmp = icmp eq i6 %uart_to_coordinates_gnss_state_1, -1

ST_2: sel_tmp1 [1/1] 1.94ns
_ifconv:8  %sel_tmp1 = icmp eq i6 %uart_to_coordinates_gnss_state_1, -2

ST_2: sel_tmp2 [1/1] 1.94ns
_ifconv:9  %sel_tmp2 = icmp eq i6 %uart_to_coordinates_gnss_state_1, -3

ST_2: sel_tmp3 [1/1] 1.94ns
_ifconv:10  %sel_tmp3 = icmp eq i6 %uart_to_coordinates_gnss_state_1, -4

ST_2: sel_tmp4 [1/1] 1.94ns
_ifconv:11  %sel_tmp4 = icmp eq i6 %uart_to_coordinates_gnss_state_1, -5

ST_2: sel_tmp5 [1/1] 1.94ns
_ifconv:12  %sel_tmp5 = icmp eq i6 %uart_to_coordinates_gnss_state_1, -6

ST_2: sel_tmp6 [1/1] 1.94ns
_ifconv:13  %sel_tmp6 = icmp eq i6 %uart_to_coordinates_gnss_state_1, 1

ST_2: sel_tmp7 [1/1] 1.94ns
_ifconv:14  %sel_tmp7 = icmp eq i6 %uart_to_coordinates_gnss_state_1, 0

ST_2: tmp6 [1/1] 1.37ns
_ifconv:15  %tmp6 = or i1 %sel_tmp5, %sel_tmp6

ST_2: tmp7 [1/1] 1.37ns
_ifconv:16  %tmp7 = or i1 %sel_tmp4, %sel_tmp3

ST_2: tmp8 [1/1] 1.37ns
_ifconv:17  %tmp8 = or i1 %tmp7, %tmp6

ST_2: tmp9 [1/1] 1.37ns
_ifconv:18  %tmp9 = or i1 %sel_tmp, %sel_tmp2

ST_2: tmp10 [1/1] 1.37ns
_ifconv:19  %tmp10 = or i1 %sel_tmp1, %sel_tmp7

ST_2: tmp11 [1/1] 1.37ns
_ifconv:20  %tmp11 = or i1 %tmp10, %tmp9

ST_2: sel_tmp8 [1/1] 1.37ns
_ifconv:21  %sel_tmp8 = or i1 %tmp11, %tmp8

ST_2: uart_to_coordinates_ck_a_V_1_i [1/1] 1.37ns
_ifconv:22  %uart_to_coordinates_ck_a_V_1_i = select i1 %sel_tmp8, i8 %uart_to_coordinates_ck_a_V_rea, i8 %tmp_i

ST_2: uart_to_coordinates_ck_b_V_1_i [1/1] 1.37ns
_ifconv:23  %uart_to_coordinates_ck_b_V_1_i = select i1 %sel_tmp8, i8 %uart_to_coordinates_ck_b_V_rea, i8 %tmp_85_i

ST_2: call_ret5 [2/2] 6.97ns
_ifconv:24  %call_ret5 = call fastcc { i6, i32, i32, i32 } @master_ip_get_gps_info_from_ubx(i8 %uart_to_coordinates_current_ou, i6 %uart_to_coordinates_gnss_state_1, i8 %uart_to_coordinates_ck_a_V_1_i, i8 %uart_to_coordinates_ck_b_V_1_i, i32* %uart_to_coordinates_tempCoordinates_0, i32* %uart_to_coordinates_tempCoordinates_1, i32* %uart_to_coordinates_tempCoordinates_2, i32 %p_read_3, i32 %p_read_2, i32 %p_read_1)


 <State 3>: 6.79ns
ST_3: call_ret5 [1/2] 5.22ns
_ifconv:24  %call_ret5 = call fastcc { i6, i32, i32, i32 } @master_ip_get_gps_info_from_ubx(i8 %uart_to_coordinates_current_ou, i6 %uart_to_coordinates_gnss_state_1, i8 %uart_to_coordinates_ck_a_V_1_i, i8 %uart_to_coordinates_ck_b_V_1_i, i32* %uart_to_coordinates_tempCoordinates_0, i32* %uart_to_coordinates_tempCoordinates_1, i32* %uart_to_coordinates_tempCoordinates_2, i32 %p_read_3, i32 %p_read_2, i32 %p_read_1)

ST_3: call_ret2 [1/1] 0.00ns
_ifconv:25  %call_ret2 = extractvalue { i6, i32, i32, i32 } %call_ret5, 0

ST_3: coordinates_0_ret [1/1] 0.00ns
_ifconv:26  %coordinates_0_ret = extractvalue { i6, i32, i32, i32 } %call_ret5, 1

ST_3: coordinates_1_ret [1/1] 0.00ns
_ifconv:27  %coordinates_1_ret = extractvalue { i6, i32, i32, i32 } %call_ret5, 2

ST_3: coordinates_2_ret [1/1] 0.00ns
_ifconv:28  %coordinates_2_ret = extractvalue { i6, i32, i32, i32 } %call_ret5, 3

ST_3: stg_46 [1/1] 1.57ns
_ifconv:29  br label %._crit_edge

ST_3: coordinates [1/1] 0.00ns
._crit_edge:0  %coordinates = phi i32 [ %p_read_3, %0 ], [ %coordinates_0_ret, %_ifconv ]

ST_3: coordinates_1 [1/1] 0.00ns
._crit_edge:1  %coordinates_1 = phi i32 [ %p_read_2, %0 ], [ %coordinates_1_ret, %_ifconv ]

ST_3: coordinates_2 [1/1] 0.00ns
._crit_edge:2  %coordinates_2 = phi i32 [ %p_read_1, %0 ], [ %coordinates_2_ret, %_ifconv ]

ST_3: uart_to_coordinates_ck_a_V [1/1] 0.00ns
._crit_edge:3  %uart_to_coordinates_ck_a_V = phi i8 [ %uart_to_coordinates_ck_a_V_rea_1, %0 ], [ %uart_to_coordinates_ck_a_V_1_i, %_ifconv ]

ST_3: uart_to_coordinates_ck_b_V [1/1] 0.00ns
._crit_edge:4  %uart_to_coordinates_ck_b_V = phi i8 [ %uart_to_coordinates_ck_b_V_rea_1, %0 ], [ %uart_to_coordinates_ck_b_V_1_i, %_ifconv ]

ST_3: uart_to_coordinates_gnss_state [1/1] 0.00ns
._crit_edge:5  %uart_to_coordinates_gnss_state = phi i6 [ %uart_to_coordinates_gnss_state_1, %0 ], [ %call_ret2, %_ifconv ]

ST_3: newret [1/1] 0.00ns
._crit_edge:6  %newret = insertvalue { i8, i8, i8, i6, i32, i32, i32 } undef, i8 %uart_to_coordinates_ck_a_V, 0

ST_3: newret2 [1/1] 0.00ns
._crit_edge:7  %newret2 = insertvalue { i8, i8, i8, i6, i32, i32, i32 } %newret, i8 %uart_to_coordinates_ck_b_V, 1

ST_3: newret4 [1/1] 0.00ns
._crit_edge:8  %newret4 = insertvalue { i8, i8, i8, i6, i32, i32, i32 } %newret2, i8 %uart_to_coordinates_current_ou, 2

ST_3: newret6 [1/1] 0.00ns
._crit_edge:9  %newret6 = insertvalue { i8, i8, i8, i6, i32, i32, i32 } %newret4, i6 %uart_to_coordinates_gnss_state, 3

ST_3: newret8 [1/1] 0.00ns
._crit_edge:10  %newret8 = insertvalue { i8, i8, i8, i6, i32, i32, i32 } %newret6, i32 %coordinates, 4

ST_3: newret1 [1/1] 0.00ns
._crit_edge:11  %newret1 = insertvalue { i8, i8, i8, i6, i32, i32, i32 } %newret8, i32 %coordinates_1, 5

ST_3: newret3 [1/1] 0.00ns
._crit_edge:12  %newret3 = insertvalue { i8, i8, i8, i6, i32, i32, i32 } %newret1, i32 %coordinates_2, 6

ST_3: stg_60 [1/1] 0.00ns
._crit_edge:13  ret { i8, i8, i8, i6, i32, i32, i32 } %newret3



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
