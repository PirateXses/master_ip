// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="master_ip,hls_ip_2015_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=27.316000,HLS_SYN_LAT=37,HLS_SYN_TPT=2,HLS_SYN_MEM=0,HLS_SYN_DSP=25,HLS_SYN_FF=4141,HLS_SYN_LUT=8709}" *)

module master_ip (
        ap_clk,
        ap_rst_n,
        uart1_V,
        uart2_V,
        alert_V,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_pp0_stg0_fsm_0 = 2'b1;
parameter    ap_ST_pp0_stg1_fsm_1 = 2'b10;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    ap_true = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv12_C01 = 12'b110000000001;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv11_3FF = 11'b1111111111;
parameter    ap_const_lv32_53 = 32'b1010011;
parameter    ap_const_lv32_3E8 = 32'b1111101000;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    C_S_AXI_AXILITES_WSTRB_WIDTH = (C_S_AXI_AXILITES_DATA_WIDTH / ap_const_int64_8);
parameter    C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);

input   ap_clk;
input   ap_rst_n;
input  [0:0] uart1_V;
input  [0:0] uart2_V;
output  [0:0] alert_V;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1 : 0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;

reg    ap_rst_n_inv;
wire   [7:0] axi_byte_V;
reg   [7:0] signal1_ck_a_V = 8'b00000000;
reg   [7:0] signal1_ck_b_V = 8'b00000000;
reg   [7:0] signal1_current_out_byte_V = 8'b00000000;
reg   [5:0] signal1_gnss_state_V = 6'b000000;
reg   [31:0] coordinates1_0 = 32'b00000000000000000000000000000000;
reg   [31:0] coordinates1_1 = 32'b00000000000000000000000000000000;
reg   [31:0] coordinates1_2 = 32'b00000000000000000000000000000000;
reg   [15:0] signal1_count_V = 16'b0000000000000000;
reg   [0:0] signal1_previous_input_V = 1'b0;
reg   [3:0] signal1_uart_state_V = 4'b0000;
reg   [7:0] signal1_next_out_byte_V = 8'b00000000;
reg   [31:0] signal1_tempCoordinates_0 = 32'b10;
reg   [31:0] signal1_tempCoordinates_1 = 32'b00000000000000000000000000000000;
reg   [31:0] signal1_tempCoordinates_2 = 32'b00000000000000000000000000000000;
reg   [7:0] signal2_ck_a_V = 8'b00000000;
reg   [7:0] signal2_ck_b_V = 8'b00000000;
reg   [7:0] signal2_current_out_byte_V = 8'b00000000;
reg   [5:0] signal2_gnss_state_V = 6'b000000;
reg   [31:0] coordinates2_0 = 32'b00000000000000000000000000000000;
reg   [31:0] coordinates2_1 = 32'b00000000000000000000000000000000;
reg   [31:0] coordinates2_2 = 32'b00000000000000000000000000000000;
reg   [15:0] signal2_count_V = 16'b0000000000000000;
reg   [0:0] signal2_previous_input_V = 1'b0;
reg   [3:0] signal2_uart_state_V = 4'b0000;
reg   [7:0] signal2_next_out_byte_V = 8'b00000000;
reg   [31:0] signal2_tempCoordinates_0 = 32'b10;
reg   [31:0] signal2_tempCoordinates_1 = 32'b00000000000000000000000000000000;
reg   [31:0] signal2_tempCoordinates_2 = 32'b00000000000000000000000000000000;
wire    master_ip_AXILiteS_s_axi_U_ap_dummy_ce;
reg   [31:0] newret7_reg_541;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm = 2'b1;
reg    ap_sig_cseq_ST_pp0_stg1_fsm_1;
reg    ap_sig_bdd_93;
wire    ap_reg_ppiten_pp0_it0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg    ap_reg_ppiten_pp0_it3 = 1'b0;
reg    ap_reg_ppiten_pp0_it4 = 1'b0;
reg    ap_reg_ppiten_pp0_it5 = 1'b0;
reg    ap_reg_ppiten_pp0_it6 = 1'b0;
reg    ap_reg_ppiten_pp0_it7 = 1'b0;
reg    ap_reg_ppiten_pp0_it8 = 1'b0;
reg    ap_reg_ppiten_pp0_it9 = 1'b0;
reg    ap_reg_ppiten_pp0_it10 = 1'b0;
reg    ap_reg_ppiten_pp0_it11 = 1'b0;
reg    ap_reg_ppiten_pp0_it12 = 1'b0;
reg    ap_reg_ppiten_pp0_it13 = 1'b0;
reg    ap_reg_ppiten_pp0_it14 = 1'b0;
reg    ap_reg_ppiten_pp0_it15 = 1'b0;
reg    ap_reg_ppiten_pp0_it16 = 1'b0;
reg    ap_reg_ppiten_pp0_it17 = 1'b0;
reg    ap_reg_ppiten_pp0_it18 = 1'b0;
reg   [31:0] newret8_reg_546;
reg   [31:0] newret9_reg_551;
wire   [31:0] tmp_i_fu_383_p2;
reg   [31:0] tmp_i_reg_556;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_0;
reg    ap_sig_bdd_145;
wire   [31:0] tmp_96_i_fu_388_p2;
reg   [31:0] tmp_96_i_reg_561;
wire   [31:0] tmp_100_i_fu_393_p2;
reg   [31:0] tmp_100_i_reg_566;
wire   [63:0] grp_fu_190_p1;
reg   [63:0] tmp_i_12_reg_571;
wire   [63:0] grp_fu_193_p1;
reg   [63:0] tmp_97_i_reg_577;
reg   [63:0] tmp_101_i_reg_583;
wire   [63:0] grp_fu_182_p2;
reg   [63:0] tmp_95_i_reg_589;
wire   [63:0] grp_fu_186_p2;
reg   [63:0] tmp_98_i_reg_594;
reg   [63:0] tmp_102_i_reg_599;
reg   [63:0] ap_reg_ppstg_tmp_102_i_reg_599_pp0_it6;
reg   [63:0] ap_reg_ppstg_tmp_102_i_reg_599_pp0_it7;
wire   [63:0] grp_fu_178_p2;
reg   [63:0] tmp_99_i_reg_604;
reg   [63:0] tmp_103_i_reg_609;
wire   [63:0] grp_fu_196_p2;
reg   [63:0] x_assign_reg_614;
reg   [0:0] p_Result_s_reg_619;
wire   [52:0] p_Result_1_fu_423_p3;
reg   [52:0] p_Result_1_reg_624;
wire   [0:0] isNeg_fu_441_p3;
reg   [0:0] isNeg_reg_629;
wire  signed [31:0] sh_assign_1_cast_fu_467_p1;
reg  signed [31:0] sh_assign_1_cast_reg_634;
reg   [0:0] tmp_reg_639;
reg    grp_master_ip_mainFunction_fu_143_ap_start;
wire    grp_master_ip_mainFunction_fu_143_ap_done;
wire    grp_master_ip_mainFunction_fu_143_ap_idle;
wire    grp_master_ip_mainFunction_fu_143_ap_ready;
wire    grp_master_ip_mainFunction_fu_143_ap_ce;
reg   [15:0] grp_master_ip_mainFunction_fu_143_uart_to_coordinates_count_V_i;
wire   [15:0] grp_master_ip_mainFunction_fu_143_uart_to_coordinates_count_V_o;
wire    grp_master_ip_mainFunction_fu_143_uart_to_coordinates_count_V_o_ap_vld;
reg   [0:0] grp_master_ip_mainFunction_fu_143_uart_to_coordinates_previous_input_V_i;
wire   [0:0] grp_master_ip_mainFunction_fu_143_uart_to_coordinates_previous_input_V_o;
wire    grp_master_ip_mainFunction_fu_143_uart_to_coordinates_previous_input_V_o_ap_vld;
reg   [3:0] grp_master_ip_mainFunction_fu_143_uart_to_coordinates_uart_state_V_i;
wire   [3:0] grp_master_ip_mainFunction_fu_143_uart_to_coordinates_uart_state_V_o;
wire    grp_master_ip_mainFunction_fu_143_uart_to_coordinates_uart_state_V_o_ap_vld;
reg   [7:0] grp_master_ip_mainFunction_fu_143_uart_to_coordinates_next_out_byte_V_i;
wire   [7:0] grp_master_ip_mainFunction_fu_143_uart_to_coordinates_next_out_byte_V_o;
wire    grp_master_ip_mainFunction_fu_143_uart_to_coordinates_next_out_byte_V_o_ap_vld;
reg   [7:0] grp_master_ip_mainFunction_fu_143_uart_to_coordinates_current_out_byte_V_read;
reg   [5:0] grp_master_ip_mainFunction_fu_143_uart_to_coordinates_gnss_state_V_read;
reg   [7:0] grp_master_ip_mainFunction_fu_143_uart_to_coordinates_ck_a_V_read;
reg   [7:0] grp_master_ip_mainFunction_fu_143_uart_to_coordinates_ck_b_V_read;
reg   [31:0] grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_0_i;
wire   [31:0] grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_0_o;
wire    grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_0_o_ap_vld;
reg   [31:0] grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_1_i;
wire   [31:0] grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_1_o;
wire    grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_1_o_ap_vld;
reg   [31:0] grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_2_i;
wire   [31:0] grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_2_o;
wire    grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_2_o_ap_vld;
reg   [0:0] grp_master_ip_mainFunction_fu_143_input_V_read;
reg   [31:0] grp_master_ip_mainFunction_fu_143_p_read;
reg   [31:0] grp_master_ip_mainFunction_fu_143_p_read2;
reg   [31:0] grp_master_ip_mainFunction_fu_143_p_read5;
wire   [7:0] grp_master_ip_mainFunction_fu_143_ap_return_0;
wire   [7:0] grp_master_ip_mainFunction_fu_143_ap_return_1;
wire   [7:0] grp_master_ip_mainFunction_fu_143_ap_return_2;
wire   [5:0] grp_master_ip_mainFunction_fu_143_ap_return_3;
wire   [31:0] grp_master_ip_mainFunction_fu_143_ap_return_4;
wire   [31:0] grp_master_ip_mainFunction_fu_143_ap_return_5;
wire   [31:0] grp_master_ip_mainFunction_fu_143_ap_return_6;
reg    grp_master_ip_mainFunction_fu_143_ap_start_ap_start_reg = 1'b0;
reg   [1:0] ap_NS_fsm;
reg    ap_sig_start_in_grp_master_ip_mainFunction_fu_143_ap_start;
reg   [63:0] grp_fu_178_p0;
reg   [63:0] grp_fu_178_p1;
reg   [63:0] grp_fu_182_p0;
reg   [63:0] grp_fu_182_p1;
reg   [31:0] grp_fu_190_p0;
wire   [63:0] p_Val2_s_fu_398_p1;
wire   [51:0] loc_V_1_fu_419_p1;
wire   [10:0] loc_V_fu_409_p4;
wire   [11:0] tmp_i_i_i_i_cast1_fu_431_p1;
wire   [11:0] sh_assign_fu_435_p2;
wire   [10:0] tmp_i_i_i_13_fu_449_p2;
wire  signed [11:0] tmp_i_i_i_cast_fu_455_p1;
wire   [11:0] sh_assign_1_fu_459_p3;
wire   [52:0] tmp_88_i_i_i_cast_fu_471_p1;
wire   [52:0] tmp_89_i_i_i_fu_475_p2;
wire   [135:0] tmp_i_i_i_fu_489_p1;
wire   [135:0] tmp_88_i_i_i_fu_492_p1;
wire   [135:0] tmp_91_i_i_i_fu_495_p2;
wire   [31:0] tmp_3_fu_501_p1;
wire   [31:0] tmp_4_fu_504_p4;
wire   [31:0] p_Val2_3_fu_514_p3;
wire   [31:0] p_Val2_7_i_i_i_fu_521_p2;
wire   [31:0] p_Val2_5_fu_527_p3;
wire    grp_fu_178_ce;
wire    grp_fu_182_ce;
wire    grp_fu_186_ce;
wire    grp_fu_190_ce;
wire    grp_fu_193_ce;
wire    grp_fu_196_ce;
wire    ap_sig_pprstidle_pp0;


master_ip_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
master_ip_AXILiteS_s_axi_U(
    .AWVALID( s_axi_AXILiteS_AWVALID ),
    .AWREADY( s_axi_AXILiteS_AWREADY ),
    .AWADDR( s_axi_AXILiteS_AWADDR ),
    .WVALID( s_axi_AXILiteS_WVALID ),
    .WREADY( s_axi_AXILiteS_WREADY ),
    .WDATA( s_axi_AXILiteS_WDATA ),
    .WSTRB( s_axi_AXILiteS_WSTRB ),
    .ARVALID( s_axi_AXILiteS_ARVALID ),
    .ARREADY( s_axi_AXILiteS_ARREADY ),
    .ARADDR( s_axi_AXILiteS_ARADDR ),
    .RVALID( s_axi_AXILiteS_RVALID ),
    .RREADY( s_axi_AXILiteS_RREADY ),
    .RDATA( s_axi_AXILiteS_RDATA ),
    .RRESP( s_axi_AXILiteS_RRESP ),
    .BVALID( s_axi_AXILiteS_BVALID ),
    .BREADY( s_axi_AXILiteS_BREADY ),
    .BRESP( s_axi_AXILiteS_BRESP ),
    .ACLK( ap_clk ),
    .ARESET( ap_rst_n_inv ),
    .ACLK_EN( master_ip_AXILiteS_s_axi_U_ap_dummy_ce ),
    .axi_byte_V( axi_byte_V )
);

master_ip_mainFunction grp_master_ip_mainFunction_fu_143(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( grp_master_ip_mainFunction_fu_143_ap_start ),
    .ap_done( grp_master_ip_mainFunction_fu_143_ap_done ),
    .ap_idle( grp_master_ip_mainFunction_fu_143_ap_idle ),
    .ap_ready( grp_master_ip_mainFunction_fu_143_ap_ready ),
    .ap_ce( grp_master_ip_mainFunction_fu_143_ap_ce ),
    .uart_to_coordinates_count_V_i( grp_master_ip_mainFunction_fu_143_uart_to_coordinates_count_V_i ),
    .uart_to_coordinates_count_V_o( grp_master_ip_mainFunction_fu_143_uart_to_coordinates_count_V_o ),
    .uart_to_coordinates_count_V_o_ap_vld( grp_master_ip_mainFunction_fu_143_uart_to_coordinates_count_V_o_ap_vld ),
    .uart_to_coordinates_previous_input_V_i( grp_master_ip_mainFunction_fu_143_uart_to_coordinates_previous_input_V_i ),
    .uart_to_coordinates_previous_input_V_o( grp_master_ip_mainFunction_fu_143_uart_to_coordinates_previous_input_V_o ),
    .uart_to_coordinates_previous_input_V_o_ap_vld( grp_master_ip_mainFunction_fu_143_uart_to_coordinates_previous_input_V_o_ap_vld ),
    .uart_to_coordinates_uart_state_V_i( grp_master_ip_mainFunction_fu_143_uart_to_coordinates_uart_state_V_i ),
    .uart_to_coordinates_uart_state_V_o( grp_master_ip_mainFunction_fu_143_uart_to_coordinates_uart_state_V_o ),
    .uart_to_coordinates_uart_state_V_o_ap_vld( grp_master_ip_mainFunction_fu_143_uart_to_coordinates_uart_state_V_o_ap_vld ),
    .uart_to_coordinates_next_out_byte_V_i( grp_master_ip_mainFunction_fu_143_uart_to_coordinates_next_out_byte_V_i ),
    .uart_to_coordinates_next_out_byte_V_o( grp_master_ip_mainFunction_fu_143_uart_to_coordinates_next_out_byte_V_o ),
    .uart_to_coordinates_next_out_byte_V_o_ap_vld( grp_master_ip_mainFunction_fu_143_uart_to_coordinates_next_out_byte_V_o_ap_vld ),
    .uart_to_coordinates_current_out_byte_V_read( grp_master_ip_mainFunction_fu_143_uart_to_coordinates_current_out_byte_V_read ),
    .uart_to_coordinates_gnss_state_V_read( grp_master_ip_mainFunction_fu_143_uart_to_coordinates_gnss_state_V_read ),
    .uart_to_coordinates_ck_a_V_read( grp_master_ip_mainFunction_fu_143_uart_to_coordinates_ck_a_V_read ),
    .uart_to_coordinates_ck_b_V_read( grp_master_ip_mainFunction_fu_143_uart_to_coordinates_ck_b_V_read ),
    .uart_to_coordinates_tempCoordinates_0_i( grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_0_i ),
    .uart_to_coordinates_tempCoordinates_0_o( grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_0_o ),
    .uart_to_coordinates_tempCoordinates_0_o_ap_vld( grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_0_o_ap_vld ),
    .uart_to_coordinates_tempCoordinates_1_i( grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_1_i ),
    .uart_to_coordinates_tempCoordinates_1_o( grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_1_o ),
    .uart_to_coordinates_tempCoordinates_1_o_ap_vld( grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_1_o_ap_vld ),
    .uart_to_coordinates_tempCoordinates_2_i( grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_2_i ),
    .uart_to_coordinates_tempCoordinates_2_o( grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_2_o ),
    .uart_to_coordinates_tempCoordinates_2_o_ap_vld( grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_2_o_ap_vld ),
    .input_V_read( grp_master_ip_mainFunction_fu_143_input_V_read ),
    .p_read( grp_master_ip_mainFunction_fu_143_p_read ),
    .p_read2( grp_master_ip_mainFunction_fu_143_p_read2 ),
    .p_read5( grp_master_ip_mainFunction_fu_143_p_read5 ),
    .ap_return_0( grp_master_ip_mainFunction_fu_143_ap_return_0 ),
    .ap_return_1( grp_master_ip_mainFunction_fu_143_ap_return_1 ),
    .ap_return_2( grp_master_ip_mainFunction_fu_143_ap_return_2 ),
    .ap_return_3( grp_master_ip_mainFunction_fu_143_ap_return_3 ),
    .ap_return_4( grp_master_ip_mainFunction_fu_143_ap_return_4 ),
    .ap_return_5( grp_master_ip_mainFunction_fu_143_ap_return_5 ),
    .ap_return_6( grp_master_ip_mainFunction_fu_143_ap_return_6 )
);

master_ip_dadd_64ns_64ns_64_4_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
master_ip_dadd_64ns_64ns_64_4_full_dsp_U31(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_178_p0 ),
    .din1( grp_fu_178_p1 ),
    .ce( grp_fu_178_ce ),
    .dout( grp_fu_178_p2 )
);

master_ip_dmul_64ns_64ns_64_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
master_ip_dmul_64ns_64ns_64_4_max_dsp_U32(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_182_p0 ),
    .din1( grp_fu_182_p1 ),
    .ce( grp_fu_182_ce ),
    .dout( grp_fu_182_p2 )
);

master_ip_dmul_64ns_64ns_64_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
master_ip_dmul_64ns_64ns_64_4_max_dsp_U33(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( tmp_97_i_reg_577 ),
    .din1( tmp_97_i_reg_577 ),
    .ce( grp_fu_186_ce ),
    .dout( grp_fu_186_p2 )
);

master_ip_sitodp_32ns_64_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
master_ip_sitodp_32ns_64_3_U34(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_190_p0 ),
    .ce( grp_fu_190_ce ),
    .dout( grp_fu_190_p1 )
);

master_ip_sitodp_32ns_64_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
master_ip_sitodp_32ns_64_3_U35(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( tmp_96_i_reg_561 ),
    .ce( grp_fu_193_ce ),
    .dout( grp_fu_193_p1 )
);

master_ip_dsqrt_64ns_64ns_64_17 #(
    .ID( 1 ),
    .NUM_STAGE( 17 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
master_ip_dsqrt_64ns_64ns_64_17_U36(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( ap_const_lv64_0 ),
    .din1( tmp_103_i_reg_609 ),
    .ce( grp_fu_196_ce ),
    .dout( grp_fu_196_p2 )
);



always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_pp0_stg0_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) begin
            ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it10
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) begin
            ap_reg_ppiten_pp0_it10 <= ap_reg_ppiten_pp0_it9;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it11
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) begin
            ap_reg_ppiten_pp0_it11 <= ap_reg_ppiten_pp0_it10;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it12
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it12 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) begin
            ap_reg_ppiten_pp0_it12 <= ap_reg_ppiten_pp0_it11;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it13
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it13 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) begin
            ap_reg_ppiten_pp0_it13 <= ap_reg_ppiten_pp0_it12;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it14
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it14 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) begin
            ap_reg_ppiten_pp0_it14 <= ap_reg_ppiten_pp0_it13;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it15
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it15 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) begin
            ap_reg_ppiten_pp0_it15 <= ap_reg_ppiten_pp0_it14;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it16
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it16 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) begin
            ap_reg_ppiten_pp0_it16 <= ap_reg_ppiten_pp0_it15;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it17
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it17 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) begin
            ap_reg_ppiten_pp0_it17 <= ap_reg_ppiten_pp0_it16;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it18
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it18 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) begin
            ap_reg_ppiten_pp0_it18 <= ap_reg_ppiten_pp0_it17;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it3
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) begin
            ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it4
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) begin
            ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it5
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) begin
            ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it6
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) begin
            ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it7
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) begin
            ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it8
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) begin
            ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it9
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) begin
            ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_grp_master_ip_mainFunction_fu_143_ap_start_ap_start_reg
    if (ap_rst_n_inv == 1'b1) begin
        grp_master_ip_mainFunction_fu_143_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_const_logic_1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0))) begin
            grp_master_ip_mainFunction_fu_143_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_master_ip_mainFunction_fu_143_ap_ready)) begin
            grp_master_ip_mainFunction_fu_143_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0)) begin
        ap_reg_ppstg_tmp_102_i_reg_599_pp0_it6 <= tmp_102_i_reg_599;
        ap_reg_ppstg_tmp_102_i_reg_599_pp0_it7 <= ap_reg_ppstg_tmp_102_i_reg_599_pp0_it6;
        isNeg_reg_629 <= sh_assign_fu_435_p2[ap_const_lv32_B];
        p_Result_1_reg_624[51 : 0] <= p_Result_1_fu_423_p3[51 : 0];
        p_Result_s_reg_619 <= p_Val2_s_fu_398_p1[ap_const_lv32_3F];
        sh_assign_1_cast_reg_634 <= sh_assign_1_cast_fu_467_p1;
        tmp_100_i_reg_566 <= tmp_100_i_fu_393_p2;
        tmp_96_i_reg_561 <= tmp_96_i_fu_388_p2;
        tmp_i_reg_556 <= tmp_i_fu_383_p2;
        tmp_reg_639 <= tmp_89_i_i_i_fu_475_p2[ap_const_lv32_34];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1) & (ap_const_logic_1 == ap_const_logic_1))) begin
        coordinates1_0 <= grp_master_ip_mainFunction_fu_143_ap_return_4;
        coordinates1_1 <= grp_master_ip_mainFunction_fu_143_ap_return_5;
        coordinates1_2 <= grp_master_ip_mainFunction_fu_143_ap_return_6;
        newret7_reg_541 <= grp_master_ip_mainFunction_fu_143_ap_return_4;
        newret8_reg_546 <= grp_master_ip_mainFunction_fu_143_ap_return_5;
        newret9_reg_551 <= grp_master_ip_mainFunction_fu_143_ap_return_6;
        signal1_ck_a_V <= grp_master_ip_mainFunction_fu_143_ap_return_0;
        signal1_ck_b_V <= grp_master_ip_mainFunction_fu_143_ap_return_1;
        signal1_current_out_byte_V <= grp_master_ip_mainFunction_fu_143_ap_return_2;
        signal1_gnss_state_V <= grp_master_ip_mainFunction_fu_143_ap_return_3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0))) begin
        coordinates2_0 <= grp_master_ip_mainFunction_fu_143_ap_return_4;
        coordinates2_1 <= grp_master_ip_mainFunction_fu_143_ap_return_5;
        coordinates2_2 <= grp_master_ip_mainFunction_fu_143_ap_return_6;
        signal2_ck_a_V <= grp_master_ip_mainFunction_fu_143_ap_return_0;
        signal2_ck_b_V <= grp_master_ip_mainFunction_fu_143_ap_return_1;
        signal2_current_out_byte_V <= grp_master_ip_mainFunction_fu_143_ap_return_2;
        signal2_gnss_state_V <= grp_master_ip_mainFunction_fu_143_ap_return_3;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_const_logic_1 == ap_const_logic_1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == grp_master_ip_mainFunction_fu_143_uart_to_coordinates_count_V_o_ap_vld)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_logic_1 == grp_master_ip_mainFunction_fu_143_uart_to_coordinates_count_V_o_ap_vld)))) begin
        signal1_count_V <= grp_master_ip_mainFunction_fu_143_uart_to_coordinates_count_V_o;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_const_logic_1 == ap_const_logic_1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == grp_master_ip_mainFunction_fu_143_uart_to_coordinates_next_out_byte_V_o_ap_vld)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_logic_1 == grp_master_ip_mainFunction_fu_143_uart_to_coordinates_next_out_byte_V_o_ap_vld)))) begin
        signal1_next_out_byte_V <= grp_master_ip_mainFunction_fu_143_uart_to_coordinates_next_out_byte_V_o;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_const_logic_1 == ap_const_logic_1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == grp_master_ip_mainFunction_fu_143_uart_to_coordinates_previous_input_V_o_ap_vld)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_logic_1 == grp_master_ip_mainFunction_fu_143_uart_to_coordinates_previous_input_V_o_ap_vld)))) begin
        signal1_previous_input_V <= grp_master_ip_mainFunction_fu_143_uart_to_coordinates_previous_input_V_o;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_const_logic_1 == ap_const_logic_1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_0_o_ap_vld)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_logic_1 == grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_0_o_ap_vld)))) begin
        signal1_tempCoordinates_0 <= grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_0_o;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_const_logic_1 == ap_const_logic_1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_1_o_ap_vld)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_logic_1 == grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_1_o_ap_vld)))) begin
        signal1_tempCoordinates_1 <= grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_1_o;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_const_logic_1 == ap_const_logic_1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_2_o_ap_vld)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_logic_1 == grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_2_o_ap_vld)))) begin
        signal1_tempCoordinates_2 <= grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_2_o;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_const_logic_1 == ap_const_logic_1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == grp_master_ip_mainFunction_fu_143_uart_to_coordinates_uart_state_V_o_ap_vld)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_logic_1 == grp_master_ip_mainFunction_fu_143_uart_to_coordinates_uart_state_V_o_ap_vld)))) begin
        signal1_uart_state_V <= grp_master_ip_mainFunction_fu_143_uart_to_coordinates_uart_state_V_o;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_logic_1 == grp_master_ip_mainFunction_fu_143_uart_to_coordinates_count_V_o_ap_vld)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == grp_master_ip_mainFunction_fu_143_uart_to_coordinates_count_V_o_ap_vld)))) begin
        signal2_count_V <= grp_master_ip_mainFunction_fu_143_uart_to_coordinates_count_V_o;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_logic_1 == grp_master_ip_mainFunction_fu_143_uart_to_coordinates_next_out_byte_V_o_ap_vld)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == grp_master_ip_mainFunction_fu_143_uart_to_coordinates_next_out_byte_V_o_ap_vld)))) begin
        signal2_next_out_byte_V <= grp_master_ip_mainFunction_fu_143_uart_to_coordinates_next_out_byte_V_o;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_logic_1 == grp_master_ip_mainFunction_fu_143_uart_to_coordinates_previous_input_V_o_ap_vld)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == grp_master_ip_mainFunction_fu_143_uart_to_coordinates_previous_input_V_o_ap_vld)))) begin
        signal2_previous_input_V <= grp_master_ip_mainFunction_fu_143_uart_to_coordinates_previous_input_V_o;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_logic_1 == grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_0_o_ap_vld)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_0_o_ap_vld)))) begin
        signal2_tempCoordinates_0 <= grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_0_o;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_logic_1 == grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_1_o_ap_vld)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_1_o_ap_vld)))) begin
        signal2_tempCoordinates_1 <= grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_1_o;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_logic_1 == grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_2_o_ap_vld)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_2_o_ap_vld)))) begin
        signal2_tempCoordinates_2 <= grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_2_o;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_logic_1 == grp_master_ip_mainFunction_fu_143_uart_to_coordinates_uart_state_V_o_ap_vld)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == grp_master_ip_mainFunction_fu_143_uart_to_coordinates_uart_state_V_o_ap_vld)))) begin
        signal2_uart_state_V <= grp_master_ip_mainFunction_fu_143_uart_to_coordinates_uart_state_V_o;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it3) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0))) begin
        tmp_101_i_reg_583 <= grp_fu_190_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it5) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0))) begin
        tmp_102_i_reg_599 <= grp_fu_182_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it9) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0))) begin
        tmp_103_i_reg_609 <= grp_fu_178_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it4))) begin
        tmp_95_i_reg_589 <= grp_fu_182_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) begin
        tmp_97_i_reg_577 <= grp_fu_193_p1;
        tmp_98_i_reg_594 <= grp_fu_186_p2;
        x_assign_reg_614 <= grp_fu_196_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6))) begin
        tmp_99_i_reg_604 <= grp_fu_178_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) begin
        tmp_i_12_reg_571 <= grp_fu_190_p1;
    end
end

always @ (ap_sig_bdd_145) begin
    if (ap_sig_bdd_145) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_93) begin
    if (ap_sig_bdd_93) begin
        ap_sig_cseq_ST_pp0_stg1_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg1_fsm_1 = ap_const_logic_0;
    end
end

assign ap_sig_pprstidle_pp0 = ap_const_logic_0;

always @ (ap_sig_cseq_ST_pp0_stg0_fsm_0) begin
    if (((ap_const_logic_1 == ap_const_logic_1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0))) begin
        ap_sig_start_in_grp_master_ip_mainFunction_fu_143_ap_start = ap_const_logic_1;
    end else begin
        ap_sig_start_in_grp_master_ip_mainFunction_fu_143_ap_start = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg1_fsm_1 or ap_reg_ppiten_pp0_it5 or ap_reg_ppiten_pp0_it7 or ap_sig_cseq_ST_pp0_stg0_fsm_0 or tmp_95_i_reg_589 or tmp_99_i_reg_604) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it7))) begin
        grp_fu_178_p0 = tmp_99_i_reg_604;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it5) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0))) begin
        grp_fu_178_p0 = tmp_95_i_reg_589;
    end else begin
        grp_fu_178_p0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg1_fsm_1 or ap_reg_ppiten_pp0_it5 or ap_reg_ppiten_pp0_it7 or ap_sig_cseq_ST_pp0_stg0_fsm_0 or tmp_98_i_reg_594 or ap_reg_ppstg_tmp_102_i_reg_599_pp0_it7) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it7))) begin
        grp_fu_178_p1 = ap_reg_ppstg_tmp_102_i_reg_599_pp0_it7;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it5) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0))) begin
        grp_fu_178_p1 = tmp_98_i_reg_594;
    end else begin
        grp_fu_178_p1 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg1_fsm_1 or ap_reg_ppiten_pp0_it3 or ap_sig_cseq_ST_pp0_stg0_fsm_0 or tmp_i_12_reg_571 or tmp_101_i_reg_583) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it3)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) begin
            grp_fu_182_p0 = tmp_101_i_reg_583;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0)) begin
            grp_fu_182_p0 = tmp_i_12_reg_571;
        end else begin
            grp_fu_182_p0 = 'bx;
        end
    end else begin
        grp_fu_182_p0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg1_fsm_1 or ap_reg_ppiten_pp0_it3 or ap_sig_cseq_ST_pp0_stg0_fsm_0 or tmp_i_12_reg_571 or tmp_101_i_reg_583) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it3)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) begin
            grp_fu_182_p1 = tmp_101_i_reg_583;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0)) begin
            grp_fu_182_p1 = tmp_i_12_reg_571;
        end else begin
            grp_fu_182_p1 = 'bx;
        end
    end else begin
        grp_fu_182_p1 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg1_fsm_1 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or tmp_i_reg_556 or ap_sig_cseq_ST_pp0_stg0_fsm_0 or tmp_100_i_reg_566) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0))) begin
        grp_fu_190_p0 = tmp_100_i_reg_566;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
        grp_fu_190_p0 = tmp_i_reg_556;
    end else begin
        grp_fu_190_p0 = 'bx;
    end
end

always @ (grp_master_ip_mainFunction_fu_143_ap_start_ap_start_reg or ap_sig_start_in_grp_master_ip_mainFunction_fu_143_ap_start) begin
    if ((ap_const_logic_1 == ap_sig_start_in_grp_master_ip_mainFunction_fu_143_ap_start)) begin
        grp_master_ip_mainFunction_fu_143_ap_start = ap_sig_start_in_grp_master_ip_mainFunction_fu_143_ap_start;
    end else begin
        grp_master_ip_mainFunction_fu_143_ap_start = grp_master_ip_mainFunction_fu_143_ap_start_ap_start_reg;
    end
end

always @ (uart1_V or uart2_V or ap_sig_cseq_ST_pp0_stg1_fsm_1 or ap_sig_cseq_ST_pp0_stg0_fsm_0) begin
    if ((ap_const_logic_1 == ap_const_logic_1)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) begin
            grp_master_ip_mainFunction_fu_143_input_V_read = uart2_V;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0)) begin
            grp_master_ip_mainFunction_fu_143_input_V_read = uart1_V;
        end else begin
            grp_master_ip_mainFunction_fu_143_input_V_read = 'bx;
        end
    end else begin
        grp_master_ip_mainFunction_fu_143_input_V_read = 'bx;
    end
end

always @ (coordinates1_0 or coordinates2_0 or ap_sig_cseq_ST_pp0_stg1_fsm_1 or ap_sig_cseq_ST_pp0_stg0_fsm_0) begin
    if ((ap_const_logic_1 == ap_const_logic_1)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) begin
            grp_master_ip_mainFunction_fu_143_p_read = coordinates2_0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0)) begin
            grp_master_ip_mainFunction_fu_143_p_read = coordinates1_0;
        end else begin
            grp_master_ip_mainFunction_fu_143_p_read = 'bx;
        end
    end else begin
        grp_master_ip_mainFunction_fu_143_p_read = 'bx;
    end
end

always @ (coordinates1_1 or coordinates2_1 or ap_sig_cseq_ST_pp0_stg1_fsm_1 or ap_sig_cseq_ST_pp0_stg0_fsm_0) begin
    if ((ap_const_logic_1 == ap_const_logic_1)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) begin
            grp_master_ip_mainFunction_fu_143_p_read2 = coordinates2_1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0)) begin
            grp_master_ip_mainFunction_fu_143_p_read2 = coordinates1_1;
        end else begin
            grp_master_ip_mainFunction_fu_143_p_read2 = 'bx;
        end
    end else begin
        grp_master_ip_mainFunction_fu_143_p_read2 = 'bx;
    end
end

always @ (coordinates1_2 or coordinates2_2 or ap_sig_cseq_ST_pp0_stg1_fsm_1 or ap_sig_cseq_ST_pp0_stg0_fsm_0) begin
    if ((ap_const_logic_1 == ap_const_logic_1)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) begin
            grp_master_ip_mainFunction_fu_143_p_read5 = coordinates2_2;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0)) begin
            grp_master_ip_mainFunction_fu_143_p_read5 = coordinates1_2;
        end else begin
            grp_master_ip_mainFunction_fu_143_p_read5 = 'bx;
        end
    end else begin
        grp_master_ip_mainFunction_fu_143_p_read5 = 'bx;
    end
end

always @ (signal1_ck_a_V or signal2_ck_a_V or ap_sig_cseq_ST_pp0_stg1_fsm_1 or ap_sig_cseq_ST_pp0_stg0_fsm_0) begin
    if ((ap_const_logic_1 == ap_const_logic_1)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) begin
            grp_master_ip_mainFunction_fu_143_uart_to_coordinates_ck_a_V_read = signal2_ck_a_V;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0)) begin
            grp_master_ip_mainFunction_fu_143_uart_to_coordinates_ck_a_V_read = signal1_ck_a_V;
        end else begin
            grp_master_ip_mainFunction_fu_143_uart_to_coordinates_ck_a_V_read = 'bx;
        end
    end else begin
        grp_master_ip_mainFunction_fu_143_uart_to_coordinates_ck_a_V_read = 'bx;
    end
end

always @ (signal1_ck_b_V or signal2_ck_b_V or ap_sig_cseq_ST_pp0_stg1_fsm_1 or ap_sig_cseq_ST_pp0_stg0_fsm_0) begin
    if ((ap_const_logic_1 == ap_const_logic_1)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) begin
            grp_master_ip_mainFunction_fu_143_uart_to_coordinates_ck_b_V_read = signal2_ck_b_V;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0)) begin
            grp_master_ip_mainFunction_fu_143_uart_to_coordinates_ck_b_V_read = signal1_ck_b_V;
        end else begin
            grp_master_ip_mainFunction_fu_143_uart_to_coordinates_ck_b_V_read = 'bx;
        end
    end else begin
        grp_master_ip_mainFunction_fu_143_uart_to_coordinates_ck_b_V_read = 'bx;
    end
end

always @ (signal1_count_V or signal2_count_V or ap_sig_cseq_ST_pp0_stg1_fsm_1 or ap_sig_cseq_ST_pp0_stg0_fsm_0) begin
    if ((ap_const_logic_1 == ap_const_logic_1)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) begin
            grp_master_ip_mainFunction_fu_143_uart_to_coordinates_count_V_i = signal2_count_V;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0)) begin
            grp_master_ip_mainFunction_fu_143_uart_to_coordinates_count_V_i = signal1_count_V;
        end else begin
            grp_master_ip_mainFunction_fu_143_uart_to_coordinates_count_V_i = 'bx;
        end
    end else begin
        grp_master_ip_mainFunction_fu_143_uart_to_coordinates_count_V_i = 'bx;
    end
end

always @ (signal1_current_out_byte_V or signal2_current_out_byte_V or ap_sig_cseq_ST_pp0_stg1_fsm_1 or ap_sig_cseq_ST_pp0_stg0_fsm_0) begin
    if ((ap_const_logic_1 == ap_const_logic_1)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) begin
            grp_master_ip_mainFunction_fu_143_uart_to_coordinates_current_out_byte_V_read = signal2_current_out_byte_V;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0)) begin
            grp_master_ip_mainFunction_fu_143_uart_to_coordinates_current_out_byte_V_read = signal1_current_out_byte_V;
        end else begin
            grp_master_ip_mainFunction_fu_143_uart_to_coordinates_current_out_byte_V_read = 'bx;
        end
    end else begin
        grp_master_ip_mainFunction_fu_143_uart_to_coordinates_current_out_byte_V_read = 'bx;
    end
end

always @ (signal1_gnss_state_V or signal2_gnss_state_V or ap_sig_cseq_ST_pp0_stg1_fsm_1 or ap_sig_cseq_ST_pp0_stg0_fsm_0) begin
    if ((ap_const_logic_1 == ap_const_logic_1)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) begin
            grp_master_ip_mainFunction_fu_143_uart_to_coordinates_gnss_state_V_read = signal2_gnss_state_V;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0)) begin
            grp_master_ip_mainFunction_fu_143_uart_to_coordinates_gnss_state_V_read = signal1_gnss_state_V;
        end else begin
            grp_master_ip_mainFunction_fu_143_uart_to_coordinates_gnss_state_V_read = 'bx;
        end
    end else begin
        grp_master_ip_mainFunction_fu_143_uart_to_coordinates_gnss_state_V_read = 'bx;
    end
end

always @ (signal1_next_out_byte_V or signal2_next_out_byte_V or ap_sig_cseq_ST_pp0_stg1_fsm_1 or ap_sig_cseq_ST_pp0_stg0_fsm_0) begin
    if ((ap_const_logic_1 == ap_const_logic_1)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) begin
            grp_master_ip_mainFunction_fu_143_uart_to_coordinates_next_out_byte_V_i = signal2_next_out_byte_V;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0)) begin
            grp_master_ip_mainFunction_fu_143_uart_to_coordinates_next_out_byte_V_i = signal1_next_out_byte_V;
        end else begin
            grp_master_ip_mainFunction_fu_143_uart_to_coordinates_next_out_byte_V_i = 'bx;
        end
    end else begin
        grp_master_ip_mainFunction_fu_143_uart_to_coordinates_next_out_byte_V_i = 'bx;
    end
end

always @ (signal1_previous_input_V or signal2_previous_input_V or ap_sig_cseq_ST_pp0_stg1_fsm_1 or ap_sig_cseq_ST_pp0_stg0_fsm_0) begin
    if ((ap_const_logic_1 == ap_const_logic_1)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) begin
            grp_master_ip_mainFunction_fu_143_uart_to_coordinates_previous_input_V_i = signal2_previous_input_V;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0)) begin
            grp_master_ip_mainFunction_fu_143_uart_to_coordinates_previous_input_V_i = signal1_previous_input_V;
        end else begin
            grp_master_ip_mainFunction_fu_143_uart_to_coordinates_previous_input_V_i = 'bx;
        end
    end else begin
        grp_master_ip_mainFunction_fu_143_uart_to_coordinates_previous_input_V_i = 'bx;
    end
end

always @ (signal1_tempCoordinates_0 or signal2_tempCoordinates_0 or ap_sig_cseq_ST_pp0_stg1_fsm_1 or ap_sig_cseq_ST_pp0_stg0_fsm_0) begin
    if ((ap_const_logic_1 == ap_const_logic_1)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) begin
            grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_0_i = signal2_tempCoordinates_0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0)) begin
            grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_0_i = signal1_tempCoordinates_0;
        end else begin
            grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_0_i = 'bx;
        end
    end else begin
        grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_0_i = 'bx;
    end
end

always @ (signal1_tempCoordinates_1 or signal2_tempCoordinates_1 or ap_sig_cseq_ST_pp0_stg1_fsm_1 or ap_sig_cseq_ST_pp0_stg0_fsm_0) begin
    if ((ap_const_logic_1 == ap_const_logic_1)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) begin
            grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_1_i = signal2_tempCoordinates_1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0)) begin
            grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_1_i = signal1_tempCoordinates_1;
        end else begin
            grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_1_i = 'bx;
        end
    end else begin
        grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_1_i = 'bx;
    end
end

always @ (signal1_tempCoordinates_2 or signal2_tempCoordinates_2 or ap_sig_cseq_ST_pp0_stg1_fsm_1 or ap_sig_cseq_ST_pp0_stg0_fsm_0) begin
    if ((ap_const_logic_1 == ap_const_logic_1)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) begin
            grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_2_i = signal2_tempCoordinates_2;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0)) begin
            grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_2_i = signal1_tempCoordinates_2;
        end else begin
            grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_2_i = 'bx;
        end
    end else begin
        grp_master_ip_mainFunction_fu_143_uart_to_coordinates_tempCoordinates_2_i = 'bx;
    end
end

always @ (signal1_uart_state_V or signal2_uart_state_V or ap_sig_cseq_ST_pp0_stg1_fsm_1 or ap_sig_cseq_ST_pp0_stg0_fsm_0) begin
    if ((ap_const_logic_1 == ap_const_logic_1)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) begin
            grp_master_ip_mainFunction_fu_143_uart_to_coordinates_uart_state_V_i = signal2_uart_state_V;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0)) begin
            grp_master_ip_mainFunction_fu_143_uart_to_coordinates_uart_state_V_i = signal1_uart_state_V;
        end else begin
            grp_master_ip_mainFunction_fu_143_uart_to_coordinates_uart_state_V_i = 'bx;
        end
    end else begin
        grp_master_ip_mainFunction_fu_143_uart_to_coordinates_uart_state_V_i = 'bx;
    end
end
always @ (ap_CS_fsm or ap_sig_pprstidle_pp0) begin
    case (ap_CS_fsm)
        ap_ST_pp0_stg0_fsm_0 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg1_fsm_1;
        end
        ap_ST_pp0_stg1_fsm_1 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


assign alert_V = ($signed(p_Val2_5_fu_527_p3) > $signed(32'b1111101000)? 1'b1: 1'b0);

assign ap_reg_ppiten_pp0_it0 = ap_const_logic_1;


always @ (ap_rst_n) begin
    ap_rst_n_inv = ~ap_rst_n;
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_145 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_0]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_93 = (ap_CS_fsm[ap_const_lv32_1] == ap_const_lv1_1);
end

assign grp_fu_178_ce = ap_const_logic_1;

assign grp_fu_182_ce = ap_const_logic_1;

assign grp_fu_186_ce = ap_const_logic_1;

assign grp_fu_190_ce = ap_const_logic_1;

assign grp_fu_193_ce = ap_const_logic_1;

assign grp_fu_196_ce = ap_const_logic_1;

assign grp_master_ip_mainFunction_fu_143_ap_ce = ap_const_logic_1;

assign isNeg_fu_441_p3 = sh_assign_fu_435_p2[ap_const_lv32_B];

assign loc_V_1_fu_419_p1 = p_Val2_s_fu_398_p1[51:0];

assign loc_V_fu_409_p4 = {{p_Val2_s_fu_398_p1[ap_const_lv32_3E : ap_const_lv32_34]}};

assign master_ip_AXILiteS_s_axi_U_ap_dummy_ce = ap_const_logic_1;

assign p_Result_1_fu_423_p3 = {{ap_const_lv1_1}, {loc_V_1_fu_419_p1}};

assign p_Val2_3_fu_514_p3 = ((isNeg_reg_629[0:0] === 1'b1) ? tmp_3_fu_501_p1 : tmp_4_fu_504_p4);

assign p_Val2_5_fu_527_p3 = ((p_Result_s_reg_619[0:0] === 1'b1) ? p_Val2_7_i_i_i_fu_521_p2 : p_Val2_3_fu_514_p3);

assign p_Val2_7_i_i_i_fu_521_p2 = (ap_const_lv32_0 - p_Val2_3_fu_514_p3);

assign p_Val2_s_fu_398_p1 = x_assign_reg_614;

assign sh_assign_1_cast_fu_467_p1 = $signed(sh_assign_1_fu_459_p3);

assign sh_assign_1_fu_459_p3 = ((isNeg_fu_441_p3[0:0] === 1'b1) ? tmp_i_i_i_cast_fu_455_p1 : sh_assign_fu_435_p2);

assign sh_assign_fu_435_p2 = ($signed(ap_const_lv12_C01) + $signed(tmp_i_i_i_i_cast1_fu_431_p1));

assign tmp_100_i_fu_393_p2 = (newret9_reg_551 - grp_master_ip_mainFunction_fu_143_ap_return_6);

assign tmp_3_fu_501_p1 = tmp_reg_639;

assign tmp_4_fu_504_p4 = {{tmp_91_i_i_i_fu_495_p2[ap_const_lv32_53 : ap_const_lv32_34]}};

assign tmp_88_i_i_i_cast_fu_471_p1 = $unsigned(sh_assign_1_cast_fu_467_p1);

assign tmp_88_i_i_i_fu_492_p1 = $unsigned(sh_assign_1_cast_reg_634);

assign tmp_89_i_i_i_fu_475_p2 = p_Result_1_fu_423_p3 >> tmp_88_i_i_i_cast_fu_471_p1;

assign tmp_91_i_i_i_fu_495_p2 = tmp_i_i_i_fu_489_p1 << tmp_88_i_i_i_fu_492_p1;

assign tmp_96_i_fu_388_p2 = (newret8_reg_546 - grp_master_ip_mainFunction_fu_143_ap_return_5);

assign tmp_i_fu_383_p2 = (newret7_reg_541 - grp_master_ip_mainFunction_fu_143_ap_return_4);

assign tmp_i_i_i_13_fu_449_p2 = (ap_const_lv11_3FF - loc_V_fu_409_p4);

assign tmp_i_i_i_cast_fu_455_p1 = $signed(tmp_i_i_i_13_fu_449_p2);

assign tmp_i_i_i_fu_489_p1 = p_Result_1_reg_624;

assign tmp_i_i_i_i_cast1_fu_431_p1 = loc_V_fu_409_p4;
always @ (posedge ap_clk) begin
    p_Result_1_reg_624[52] <= 1'b1;
end



endmodule //master_ip

