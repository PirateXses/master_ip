

================================================================
== Vivado HLS Report for 'master_ip_uart_to_byte'
================================================================
* Date:           Wed May 11 13:22:14 2016

* Version:        2015.4 (Build 1412921 on Wed Nov 18 09:58:55 AM 2015)
* Project:        master_ip
* Solution:       solution2
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  20.00|     10.50|        2.50|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |    0|    0|    1|    1| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 1
* Pipeline: 1
  Pipeline-0: II = 1, D = 1, States = { 1 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
* FSM state operations: 

 <State 1>: 10.50ns
ST_1: uart_to_coordinates_current_ou_2 [1/1] 0.00ns
:0  %uart_to_coordinates_current_ou_2 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %uart_to_coordinates_current_out_byte_V_read)

ST_1: uart_to_coordinates_current_in_1 [1/1] 0.00ns
:1  %uart_to_coordinates_current_in_1 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %uart_to_coordinates_current_input_V_read)

ST_1: uart_to_coordinates_uart_state [1/1] 0.00ns
:2  %uart_to_coordinates_uart_state = call i4 @_ssdm_op_Read.ap_auto.i4P(i4* %uart_to_coordinates_uart_state_V)

ST_1: tmp [1/1] 1.88ns
:3  %tmp = icmp eq i4 %uart_to_coordinates_uart_state, 0

ST_1: uart_to_coordinates_previous_i [1/1] 0.00ns
:4  %uart_to_coordinates_previous_i = call i1 @_ssdm_op_Read.ap_auto.i1P(i1* %uart_to_coordinates_previous_input_V)

ST_1: t_V [1/1] 0.00ns
:5  %t_V = call i16 @_ssdm_op_Read.ap_auto.i16P(i16* %uart_to_coordinates_count_V)

ST_1: stg_8 [1/1] 0.00ns
:6  br i1 %tmp, label %1, label %8

ST_1: tmp_1 [1/1] 1.88ns
:0  %tmp_1 = icmp eq i4 %uart_to_coordinates_uart_state, 1

ST_1: uart_to_coordinates_next_out_b [1/1] 0.00ns
:1  %uart_to_coordinates_next_out_b = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %uart_to_coordinates_next_out_byte_V)

ST_1: stg_11 [1/1] 0.00ns
:2  br i1 %tmp_1, label %9, label %16

ST_1: tmp_10 [1/1] 1.88ns
:0  %tmp_10 = icmp eq i4 %uart_to_coordinates_uart_state, -1

ST_1: tmp_12 [1/1] 1.88ns
:1  %tmp_12 = icmp eq i4 %uart_to_coordinates_uart_state, -2

ST_1: tmp_14 [1/1] 1.37ns
:2  %tmp_14 = or i1 %tmp_12, %tmp_10

ST_1: tmp_15 [1/1] 1.88ns
:3  %tmp_15 = icmp eq i4 %uart_to_coordinates_uart_state, -3

ST_1: tmp_16 [1/1] 1.37ns
:4  %tmp_16 = or i1 %tmp_15, %tmp_14

ST_1: tmp_17 [1/1] 1.88ns
:5  %tmp_17 = icmp eq i4 %uart_to_coordinates_uart_state, -4

ST_1: tmp_18 [1/1] 1.37ns
:6  %tmp_18 = or i1 %tmp_17, %tmp_16

ST_1: tmp_19 [1/1] 1.88ns
:7  %tmp_19 = icmp eq i4 %uart_to_coordinates_uart_state, -5

ST_1: tmp_20 [1/1] 1.37ns
:8  %tmp_20 = or i1 %tmp_19, %tmp_18

ST_1: tmp_21 [1/1] 1.88ns
:9  %tmp_21 = icmp eq i4 %uart_to_coordinates_uart_state, -6

ST_1: tmp_22 [1/1] 1.37ns
:10  %tmp_22 = or i1 %tmp_21, %tmp_20

ST_1: tmp_23 [1/1] 1.88ns
:11  %tmp_23 = icmp eq i4 %uart_to_coordinates_uart_state, 0

ST_1: tmp_24 [1/1] 1.37ns
:12  %tmp_24 = or i1 %tmp_23, %tmp_22

ST_1: stg_25 [1/1] 0.00ns
:13  br i1 %tmp_24, label %._crit_edge359, label %17

ST_1: tmp_i1 [1/1] 1.37ns
:0  %tmp_i1 = xor i1 %uart_to_coordinates_previous_i, %uart_to_coordinates_current_in_1

ST_1: tmp_i1_10 [1/1] 2.28ns
:1  %tmp_i1_10 = icmp ult i16 %t_V, 1350

ST_1: tmp_52_i [1/1] 2.28ns
:2  %tmp_52_i = icmp ugt i16 %t_V, 1250

ST_1: tmp_53_i [1/1] 2.28ns
:3  %tmp_53_i = icmp ugt i16 %t_V, 1350

ST_1: lhs_V_1_i_cast [1/1] 0.00ns
:4  %lhs_V_1_i_cast = zext i4 %uart_to_coordinates_uart_state to i5

ST_1: r_V_4 [1/1] 0.80ns
:5  %r_V_4 = add i5 -2, %lhs_V_1_i_cast

ST_1: tmp_25 [1/1] 0.00ns
:6  %tmp_25 = call i1 @_ssdm_op_BitSelect.i1.i5.i32(i5 %r_V_4, i32 4)

ST_1: tmp_56_i [1/1] 0.00ns
:7  %tmp_56_i = zext i1 %uart_to_coordinates_previous_i to i32

ST_1: tmp_56_i_cast [1/1] 0.00ns
:8  %tmp_56_i_cast = zext i1 %uart_to_coordinates_previous_i to i5

ST_1: tmp_57_i [1/1] 0.80ns
:9  %tmp_57_i = sub i5 2, %lhs_V_1_i_cast

ST_1: tmp_58_i [1/1] 1.18ns
:10  %tmp_58_i = lshr i5 %tmp_56_i_cast, %tmp_57_i

ST_1: tmp_60_i [1/1] 0.00ns
:11  %tmp_60_i = sext i5 %r_V_4 to i32

ST_1: tmp_61_i [1/1] 1.18ns
:12  %tmp_61_i = shl i32 %tmp_56_i, %tmp_60_i

ST_1: tmp_63_i [1/1] 0.00ns
:13  %tmp_63_i = zext i1 %uart_to_coordinates_current_in_1 to i32

ST_1: tmp_63_i_cast [1/1] 0.00ns
:14  %tmp_63_i_cast = zext i1 %uart_to_coordinates_current_in_1 to i5

ST_1: tmp_65_i [1/1] 1.18ns
:15  %tmp_65_i = lshr i5 %tmp_63_i_cast, %tmp_57_i

ST_1: tmp_68_i [1/1] 1.18ns
:16  %tmp_68_i = shl i32 %tmp_63_i, %tmp_60_i

ST_1: tmp_5 [1/1] 0.00ns
:17  %tmp_5 = zext i5 %tmp_58_i to i8

ST_1: tmp_26 [1/1] 0.00ns
:18  %tmp_26 = trunc i32 %tmp_61_i to i8

ST_1: r_V [1/1] 1.37ns
:19  %r_V = select i1 %tmp_25, i8 %tmp_5, i8 %tmp_26

ST_1: tmp_70_i [1/1] 0.80ns
:20  %tmp_70_i = add i4 1, %uart_to_coordinates_uart_state

ST_1: tmp_11 [1/1] 0.00ns
:21  %tmp_11 = zext i5 %tmp_65_i to i8

ST_1: tmp_27 [1/1] 0.00ns
:22  %tmp_27 = trunc i32 %tmp_68_i to i8

ST_1: r_V_1 [1/1] 1.37ns
:23  %r_V_1 = select i1 %tmp_25, i8 %tmp_11, i8 %tmp_27

ST_1: sel_tmp_i [1/1] 1.37ns
:24  %sel_tmp_i = xor i1 %tmp_i1, true

ST_1: sel_tmp1_i [1/1] 1.37ns
:25  %sel_tmp1_i = and i1 %tmp_53_i, %sel_tmp_i

ST_1: sel_tmp2_v_i_cast_cast [1/1] 1.37ns
:26  %sel_tmp2_v_i_cast_cast = select i1 %sel_tmp1_i, i16 -1299, i16 1

ST_1: sel_tmp2_i [1/1] 1.96ns
:27  %sel_tmp2_i = add i16 %t_V, %sel_tmp2_v_i_cast_cast

ST_1: sel_tmp3_demorgan_i [1/1] 1.37ns
:28  %sel_tmp3_demorgan_i = and i1 %tmp_i1_10, %tmp_52_i

ST_1: sel_tmp3_i [1/1] 1.37ns
:29  %sel_tmp3_i = xor i1 %sel_tmp3_demorgan_i, true

ST_1: sel_tmp4_i [1/1] 1.37ns
:30  %sel_tmp4_i = and i1 %tmp_i1, %sel_tmp3_i

ST_1: tmp1 [1/1] 1.37ns
:31  %tmp1 = and i1 %tmp_52_i, %tmp_i1

ST_1: sel_tmp6_i [1/1] 1.37ns
:32  %sel_tmp6_i = and i1 %tmp1, %tmp_i1_10

ST_1: tmp_13 [1/1] 1.37ns
:33  %tmp_13 = or i1 %sel_tmp6_i, %sel_tmp4_i

ST_1: uart_to_coordinates_count_V_wr [1/1] 1.37ns
:34  %uart_to_coordinates_count_V_wr = select i1 %tmp_13, i16 1, i16 %sel_tmp2_i

ST_1: sel_tmp13_i [1/1] 1.37ns
:35  %sel_tmp13_i = select i1 %sel_tmp4_i, i1 %uart_to_coordinates_current_in_1, i1 %uart_to_coordinates_previous_i

ST_1: uart_to_coordinates_previous_i_1 [1/1] 1.37ns
:36  %uart_to_coordinates_previous_i_1 = select i1 %sel_tmp6_i, i1 %uart_to_coordinates_current_in_1, i1 %sel_tmp13_i

ST_1: newSel [1/1] 1.37ns
:37  %newSel = select i1 %sel_tmp6_i, i4 %tmp_70_i, i4 0

ST_1: newSel1 [1/1] 1.37ns
:38  %newSel1 = select i1 %sel_tmp1_i, i4 %tmp_70_i, i4 %uart_to_coordinates_uart_state

ST_1: uart_to_coordinates_uart_state_1 [1/1] 1.37ns
:39  %uart_to_coordinates_uart_state_1 = select i1 %tmp_13, i4 %newSel, i4 %newSel1

ST_1: newSel3 [1/1] 1.37ns
:40  %newSel3 = select i1 %sel_tmp6_i, i8 %r_V, i8 0

ST_1: newSel4 [1/1] 1.37ns
:41  %newSel4 = select i1 %sel_tmp1_i, i8 %r_V_1, i8 0

ST_1: newSel5 [1/1] 1.37ns
:42  %newSel5 = select i1 %tmp_13, i8 %newSel3, i8 %newSel4

ST_1: uart_to_coordinates_next_out_b_1 [1/1] 1.37ns
:43  %uart_to_coordinates_next_out_b_1 = or i8 %uart_to_coordinates_next_out_b, %newSel5

ST_1: stg_70 [1/1] 0.00ns
:44  call void @_ssdm_op_Write.ap_auto.i16P(i16* %uart_to_coordinates_count_V, i16 %uart_to_coordinates_count_V_wr)

ST_1: stg_71 [1/1] 0.00ns
:45  call void @_ssdm_op_Write.ap_auto.i1P(i1* %uart_to_coordinates_previous_input_V, i1 %uart_to_coordinates_previous_i_1)

ST_1: stg_72 [1/1] 0.00ns
:46  call void @_ssdm_op_Write.ap_auto.i4P(i4* %uart_to_coordinates_uart_state_V, i4 %uart_to_coordinates_uart_state_1)

ST_1: stg_73 [1/1] 0.00ns
:47  call void @_ssdm_op_Write.ap_auto.i8P(i8* %uart_to_coordinates_next_out_byte_V, i8 %uart_to_coordinates_next_out_b_1)

ST_1: stg_74 [1/1] 0.00ns
:48  br label %._crit_edge361

ST_1: tmp_9 [1/1] 1.88ns
._crit_edge359:0  %tmp_9 = icmp ugt i4 %uart_to_coordinates_uart_state, -7

ST_1: tmp_3 [1/1] 1.88ns
._crit_edge359:1  %tmp_3 = icmp ult i4 %uart_to_coordinates_uart_state, -3

ST_1: or_cond3 [1/1] 1.37ns
._crit_edge359:2  %or_cond3 = and i1 %tmp_9, %tmp_3

ST_1: stg_78 [1/1] 0.00ns
._crit_edge359:3  br i1 %or_cond3, label %_ifconv, label %._crit_edge361

ST_1: stg_79 [1/1] 0.00ns
._crit_edge361:0  br label %18

ST_1: tmp_i [1/1] 2.28ns
_ifconv:0  %tmp_i = icmp ugt i16 %t_V, 1350

ST_1: tmp_i_11 [1/1] 2.28ns
_ifconv:1  %tmp_i_11 = icmp ult i16 %t_V, 1350

ST_1: tmp_11_i [1/1] 2.28ns
_ifconv:2  %tmp_11_i = icmp ugt i16 %t_V, 1250

ST_1: addconv_i [1/1] 1.96ns
_ifconv:3  %addconv_i = add i16 %t_V, -1299

ST_1: tmp_12_i [1/1] 1.96ns
_ifconv:4  %tmp_12_i = add i16 %t_V, 1

ST_1: uart_to_coordinates_current_in [1/1] 1.37ns
_ifconv:5  %uart_to_coordinates_current_in = xor i1 %uart_to_coordinates_current_in_1, true

ST_1: sel_tmp3 [1/1] 1.37ns
_ifconv:6  %sel_tmp3 = xor i1 %tmp_i, true

ST_1: sel_tmp4 [1/1] 1.37ns
_ifconv:7  %sel_tmp4 = and i1 %uart_to_coordinates_current_in_1, %sel_tmp3

ST_1: sel_tmp7 [1/1] 1.37ns
_ifconv:8  %sel_tmp7 = or i1 %tmp_i, %uart_to_coordinates_current_in

ST_1: tmp2 [1/1] 1.37ns
_ifconv:9  %tmp2 = and i1 %tmp_11_i, %uart_to_coordinates_current_in

ST_1: sel_tmp9 [1/1] 1.37ns
_ifconv:10  %sel_tmp9 = and i1 %tmp2, %tmp_i_11

ST_1: sel_tmp [1/1] 1.37ns
_ifconv:11  %sel_tmp = and i1 %tmp_i, %uart_to_coordinates_current_in_1

ST_1: uart_to_coordinates_uart_state_2 [1/1] 1.37ns
_ifconv:12  %uart_to_coordinates_uart_state_2 = or i1 %sel_tmp9, %sel_tmp

ST_1: uart_to_coordinates_uart_state_3 [1/1] 0.00ns
_ifconv:13  %uart_to_coordinates_uart_state_3 = zext i1 %uart_to_coordinates_uart_state_2 to i4

ST_1: sel_tmp1 [1/1] 1.37ns
_ifconv:14  %sel_tmp1 = select i1 %sel_tmp, i8 %uart_to_coordinates_next_out_b, i8 %uart_to_coordinates_current_ou_2

ST_1: uart_to_coordinates_current_ou [1/1] 1.37ns
_ifconv:15  %uart_to_coordinates_current_ou = select i1 %sel_tmp9, i8 %uart_to_coordinates_next_out_b, i8 %sel_tmp1

ST_1: newSel6 [1/1] 1.37ns
_ifconv:16  %newSel6 = select i1 %sel_tmp9, i16 1, i16 %addconv_i

ST_1: newSel7 [1/1] 1.37ns
_ifconv:17  %newSel7 = select i1 %sel_tmp4, i16 %tmp_12_i, i16 1

ST_1: uart_to_coordinates_count_V_wr_1 [1/1] 1.37ns
_ifconv:18  %uart_to_coordinates_count_V_wr_1 = select i1 %uart_to_coordinates_uart_state_2, i16 %newSel6, i16 %newSel7

ST_1: uart_to_coordinates_previous_i_2 [1/1] 1.37ns
_ifconv:19  %uart_to_coordinates_previous_i_2 = select i1 %sel_tmp7, i1 %sel_tmp, i1 %uart_to_coordinates_previous_i

ST_1: uart_to_coordinates_uart_state_4 [1/1] 1.37ns
_ifconv:20  %uart_to_coordinates_uart_state_4 = select i1 %sel_tmp7, i4 %uart_to_coordinates_uart_state_3, i4 %uart_to_coordinates_uart_state

ST_1: stg_101 [1/1] 0.00ns
_ifconv:21  call void @_ssdm_op_Write.ap_auto.i16P(i16* %uart_to_coordinates_count_V, i16 %uart_to_coordinates_count_V_wr_1)

ST_1: stg_102 [1/1] 0.00ns
_ifconv:22  call void @_ssdm_op_Write.ap_auto.i1P(i1* %uart_to_coordinates_previous_input_V, i1 %uart_to_coordinates_previous_i_2)

ST_1: stg_103 [1/1] 0.00ns
_ifconv:23  call void @_ssdm_op_Write.ap_auto.i4P(i4* %uart_to_coordinates_uart_state_V, i4 %uart_to_coordinates_uart_state_4)

ST_1: stg_104 [1/1] 1.57ns
_ifconv:24  br label %20

ST_1: stg_105 [1/1] 0.00ns
:0  br i1 %uart_to_coordinates_current_in_1, label %.critedge363, label %10

ST_1: tmp_7 [1/1] 2.28ns
:0  %tmp_7 = icmp ugt i16 %t_V, 1350

ST_1: stg_107 [1/1] 0.00ns
:1  br i1 %tmp_7, label %11, label %._crit_edge355

ST_1: tmp_8 [1/1] 1.96ns
._crit_edge355:0  %tmp_8 = add i16 %t_V, 1

ST_1: stg_109 [1/1] 0.00ns
._crit_edge355:1  call void @_ssdm_op_Write.ap_auto.i16P(i16* %uart_to_coordinates_count_V, i16 %tmp_8)

ST_1: stg_110 [1/1] 0.00ns
._crit_edge355:2  br label %14

ST_1: stg_111 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_auto.i4P(i4* %uart_to_coordinates_uart_state_V, i4 2)

ST_1: addconv [1/1] 1.96ns
:1  %addconv = add i16 %t_V, -1299

ST_1: stg_113 [1/1] 0.00ns
:2  call void @_ssdm_op_Write.ap_auto.i16P(i16* %uart_to_coordinates_count_V, i16 %addconv)

ST_1: stg_114 [1/1] 0.00ns
:3  call void @_ssdm_op_Write.ap_auto.i1P(i1* %uart_to_coordinates_previous_input_V, i1 false)

ST_1: stg_115 [1/1] 0.00ns
:4  call void @_ssdm_op_Write.ap_auto.i8P(i8* %uart_to_coordinates_next_out_byte_V, i8 0)

ST_1: stg_116 [1/1] 0.00ns
:5  br label %15

ST_1: tmp_6 [1/1] 2.28ns
.critedge363:0  %tmp_6 = icmp ult i16 %t_V, 1350

ST_1: tmp_s [1/1] 2.28ns
.critedge363:1  %tmp_s = icmp ugt i16 %t_V, 1250

ST_1: or_cond [1/1] 1.37ns
.critedge363:2  %or_cond = and i1 %tmp_6, %tmp_s

ST_1: stg_120 [1/1] 0.00ns
.critedge363:3  br i1 %or_cond, label %12, label %._crit_edge357

ST_1: stg_121 [1/1] 0.00ns
._crit_edge357:0  call void @_ssdm_op_Write.ap_auto.i4P(i4* %uart_to_coordinates_uart_state_V, i4 0)

ST_1: stg_122 [1/1] 0.00ns
._crit_edge357:1  call void @_ssdm_op_Write.ap_auto.i16P(i16* %uart_to_coordinates_count_V, i16 1)

ST_1: stg_123 [1/1] 0.00ns
._crit_edge357:2  call void @_ssdm_op_Write.ap_auto.i1P(i1* %uart_to_coordinates_previous_input_V, i1 true)

ST_1: stg_124 [1/1] 0.00ns
._crit_edge357:3  br label %13

ST_1: stg_125 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_auto.i4P(i4* %uart_to_coordinates_uart_state_V, i4 2)

ST_1: stg_126 [1/1] 0.00ns
:1  call void @_ssdm_op_Write.ap_auto.i16P(i16* %uart_to_coordinates_count_V, i16 1)

ST_1: stg_127 [1/1] 0.00ns
:2  call void @_ssdm_op_Write.ap_auto.i1P(i1* %uart_to_coordinates_previous_input_V, i1 true)

ST_1: stg_128 [1/1] 0.00ns
:3  call void @_ssdm_op_Write.ap_auto.i8P(i8* %uart_to_coordinates_next_out_byte_V, i8 0)

ST_1: stg_129 [1/1] 0.00ns
:4  br label %13

ST_1: stg_130 [1/1] 0.00ns
:0  br label %14

ST_1: stg_131 [1/1] 0.00ns
:0  br label %15

ST_1: stg_132 [1/1] 0.00ns
:0  br label %18

ST_1: stg_133 [1/1] 0.00ns
:0  br label %19

ST_1: tmp_2 [1/1] 2.28ns
:0  %tmp_2 = icmp eq i16 %t_V, 14300

ST_1: stg_135 [1/1] 0.00ns
:1  br i1 %uart_to_coordinates_current_in_1, label %.critedge, label %2

ST_1: or_cond4 [1/1] 1.37ns
:0  %or_cond4 = and i1 %uart_to_coordinates_previous_i, %tmp_2

ST_1: stg_137 [1/1] 0.00ns
:1  br i1 %or_cond4, label %3, label %._crit_edge

ST_1: stg_138 [1/1] 0.00ns
._crit_edge:0  call void @_ssdm_op_Write.ap_auto.i16P(i16* %uart_to_coordinates_count_V, i16 0)

ST_1: stg_139 [1/1] 1.57ns
._crit_edge:1  br label %6

ST_1: stg_140 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_auto.i4P(i4* %uart_to_coordinates_uart_state_V, i4 1)

ST_1: stg_141 [1/1] 0.00ns
:1  call void @_ssdm_op_Write.ap_auto.i16P(i16* %uart_to_coordinates_count_V, i16 1)

ST_1: stg_142 [1/1] 0.00ns
:2  br label %7

ST_1: stg_143 [1/1] 0.00ns
.critedge:0  br i1 %tmp_2, label %5, label %4

ST_1: tmp_4 [1/1] 1.96ns
:0  %tmp_4 = add i16 %t_V, 1

ST_1: stg_145 [1/1] 0.00ns
:1  call void @_ssdm_op_Write.ap_auto.i16P(i16* %uart_to_coordinates_count_V, i16 %tmp_4)

ST_1: stg_146 [1/1] 0.00ns
:2  br label %5

ST_1: stg_147 [1/1] 1.57ns
:0  br label %6

ST_1: storemerge [1/1] 0.00ns
:0  %storemerge = phi i1 [ true, %5 ], [ false, %._crit_edge ]

ST_1: stg_149 [1/1] 0.00ns
:1  call void @_ssdm_op_Write.ap_auto.i1P(i1* %uart_to_coordinates_previous_input_V, i1 %storemerge)

ST_1: stg_150 [1/1] 0.00ns
:2  br label %7

ST_1: stg_151 [1/1] 0.00ns
:0  br label %19

ST_1: stg_152 [1/1] 1.57ns
:0  br label %20

ST_1: uart_to_coordinates_current_ou_1 [1/1] 0.00ns
:0  %uart_to_coordinates_current_ou_1 = phi i8 [ %uart_to_coordinates_current_ou_2, %19 ], [ %uart_to_coordinates_current_ou, %_ifconv ]

ST_1: p_s [1/1] 0.00ns
:1  %p_s = phi i1 [ false, %19 ], [ %uart_to_coordinates_uart_state_2, %_ifconv ]

ST_1: mrv [1/1] 0.00ns
:2  %mrv = insertvalue { i1, i8 } undef, i1 %p_s, 0

ST_1: mrv_1 [1/1] 0.00ns
:3  %mrv_1 = insertvalue { i1, i8 } %mrv, i8 %uart_to_coordinates_current_ou_1, 1

ST_1: stg_157 [1/1] 0.00ns
:4  ret { i1, i8 } %mrv_1



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
